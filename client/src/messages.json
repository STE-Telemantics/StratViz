[
  {
    "ID": 0,
    "Name": "CANOpen_NMT",
    "Field names": "command, node",
    "Data types": "CANOpenNMTCommand, uint8_t",
    "Units": "command, node ID",
    "Default values": "CANOpenNMTCommand::Null, 0",
    "Description": "CANopen NMT command",
    "Senders": "ACU",
    "Receivers": "SAC, BAC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1,
    "Name": "LVC_VehicleState",
    "Field names": "lvcState, state, error",
    "Data types": "LVCState, VehicleState, LVCError",
    "Units": "lvcState, state, error",
    "Default values": "LVCState::Initializing, VehicleState::Standby, LVCError::None",
    "Description": "The state of the vehicle",
    "Senders": "LVC",
    "Receivers": "BMS, BoC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 1
  },
  {
    "ID": 2,
    "Name": "LVC_Shutdown",
    "Field names": "errcode, ctr",
    "Data types": "uint32_t, uint8_t",
    "Units": "code, code",
    "Default values": "0, 0",
    "Description": "State of the LVC",
    "Senders": "LVC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 0,
    "Type": "A",
    "Properties": "",
    "Send frequency": 1
  },
  {
    "ID": 10,
    "Name": "BMS_State",
    "Field names": "mainState, imdState, coolingLimitState, coolingControlState, battfrontState, canControllerState, error, _dummy",
    "Data types": "BMSState, IMDState, BMSCoolingLimit, OnOff, OnOff, OnOff, BMSError, bool",
    "Units": "BMS state, IMD state, Cooling limit state, on/off, on/off, on/off, error, dontcare",
    "Default values": "BMSState::ESS, IMDState::Off, BMSCoolingLimit::Charging, OnOff::Off, OnOff::Off, OnOff::On, BMSError::None, false",
    "Description": "Main states of the BMS state machine",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 11,
    "Name": "BMS_IMDStatus",
    "Field names": "insulationValue, frequencyHz, state",
    "Data types": "uint32_t, uint16_t, IMDMeasurement",
    "Units": "kOhm, Hz, state",
    "Default values": "0, 0, IMDMeasurement::NoData",
    "Description": "Current IMD state,  IMD operating frequency,  IMD measured insulation according to bender datasheet",
    "Senders": "BMS",
    "Receivers": "MK5",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 12,
    "Name": "BMS_MinMaxCellVoltage",
    "Field names": "minCellVoltage, maxCellVoltage, minCellNumber, maxCellNumber, maxNonAdjacentBalancedCellVoltage",
    "Data types": "uint16_t, uint16_t, uint8_t, uint8_t, uint16_t",
    "Units": "mV, mV, -, -, mV",
    "Default values": "0, 0, 0, 0, 0",
    "Description": "Minimal & Maximal  Battery MetaCell Voltages  including cell identification Identification starts from 0 on top battery layer, from 100 on middle battery layer and 200 on bottom battery layer",
    "Senders": "BMS",
    "Receivers": "FUC",
    "Send interval": 20,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 13,
    "Name": "BMS_MinMaxCellTemp",
    "Field names": "minCellTemperature, maxCellTemperature, minNTCNumber, maxNTCNumber",
    "Data types": "int16_t, int16_t, uint8_t, uint8_t",
    "Units": "c°C, c°C, -, -",
    "Default values": "0, 0, 0, 0",
    "Description": "Minimal & Maximal  Battery MetaCell Temperatures  including cell identification Identification starts from 0 on top battery layer, from 100 on middle battery layer and 200 on bottom battery layer",
    "Senders": "BMS",
    "Receivers": "FUC",
    "Send interval": 20,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 20,
    "Name": "ACU_DNR",
    "Field names": "dnr",
    "Data types": "DNR",
    "Units": "DNR",
    "Default values": "DNR::Unknown",
    "Description": "Current DNR state of the ACU",
    "Senders": "ACU",
    "Receivers": "FUC",
    "Send interval": 5,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 21,
    "Name": "ACU_OperationMode",
    "Field names": "mode",
    "Data types": "OperationMode",
    "Units": "Operation mode",
    "Default values": "OperationMode::Unknown",
    "Description": "Current operation mode of the ACU",
    "Senders": "ACU",
    "Receivers": "FUC",
    "Send interval": 5,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 22,
    "Name": "ACU_MotorControlState",
    "Field names": "mode, hillAssistActive, leftInverterAlive, rightInverterAlive, leftInverterError, rightInverterError, throttlePedalOK, brakePedalOK, leftInvInternalOverTemperature, leftInvMotorOverTemperature, leftInvOvercurrent, leftInvUndercurrent, leftInvOvervoltage, leftInvUndervoltage, rightInvInternalOverTemperature, rightInvMotorOverTemperature, rightInvOvercurrent, rightInvUndercurrent, rightInvOvervoltage, rightInvUndervoltage, leftInverterStatus, rightInverterStatus",
    "Data types": "MotorControlMode, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, InverterStatus, InverterStatus",
    "Units": "mode, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, status, status",
    "Default values": "MotorControlMode::Manual, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, InverterStatus::Unknown, InverterStatus::Unknown",
    "Description": "Contains the motor control state of the ACU",
    "Senders": "ACU",
    "Receivers": "",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 23,
    "Name": "ACU_CruiseControl",
    "Field names": "setpoint, state",
    "Data types": "float, ControlState",
    "Units": "m/s, state",
    "Default values": "0.f, ControlState::Unknown",
    "Description": "Contains the current state of the cruise control",
    "Senders": "ACU",
    "Receivers": "SSB",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 24,
    "Name": "ACU_PedalFaults",
    "Field names": "throttlePedalsDifferent, throttle1AOB, throttle2AOB, brakePedalsDifferent, brake1AOB, brake2AOB",
    "Data types": "bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1",
    "Units": "T/F, T/F, T/F, T/F, T/F, T/F",
    "Default values": "0, 0, 0, 0, 0, 0",
    "Description": "Contains any faults in the pedal measurements",
    "Senders": "ACU",
    "Receivers": "FUC",
    "Send interval": 100,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 25,
    "Name": "ACU_Lights",
    "Field names": "brakeLight, reverseLight",
    "Data types": "bool: 1, bool: 1",
    "Units": "T/F, T/F",
    "Default values": "0, 0",
    "Description": "Contains whether the lights controlled by the ACU should be enabled",
    "Senders": "ACU",
    "Receivers": "RAUX",
    "Send interval": 5,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 30,
    "Name": "PvC_Output",
    "Field names": "voltage, current",
    "Data types": "float, float",
    "Units": "V, A",
    "Default values": "0.f, 0.f",
    "Description": "Voltage and current output of the PvC",
    "Senders": "PvC",
    "Receivers": "ChC, BoC",
    "Send interval": 5,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 60,
    "Name": "SSB_Lights",
    "Field names": "lights,fogLight,leftIndicator,rightIndicator",
    "Data types": "LightingState,bool: 1, bool: 1, bool: 1",
    "Units": "State, On/Off, On/Off, On/Off",
    "Default values": "LightingState::Off, false, false, false",
    "Description": "Current lighting state according to the SSB",
    "Senders": "SSB",
    "Receivers": "FUC, RAUX",
    "Send interval": 5,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 40
  },
  {
    "ID": 61,
    "Name": "SSB_PedallessRegen",
    "Field names": "amount, enable",
    "Data types": "float, bool",
    "Units": "-, T/F",
    "Default values": "0.f, 0",
    "Description": "Allows for regenerative braking through input on the steering wheel",
    "Senders": "SSB",
    "Receivers": "ACU",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 62,
    "Name": "SSB_HumanInput",
    "Field names": "humanInput",
    "Data types": "bool",
    "Units": "T/F",
    "Default values": 0,
    "Description": "Whether a hand is present on the steering wheel",
    "Senders": "SSB",
    "Receivers": "ACU",
    "Send interval": 20,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 70,
    "Name": "BB_ActuationState",
    "Field names": "enable",
    "Data types": "bool",
    "Units": "T/F",
    "Default values": 0,
    "Description": "Whether the Blue box wants actuation control to be enabled",
    "Senders": "BB",
    "Receivers": "ACU",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 71,
    "Name": "BB_SetPoint",
    "Field names": "steeringAngle, velocity, acceleration, reverse",
    "Data types": "int16_t, int16_t, int16_t, bool",
    "Units": "deg, mm/s, mm/s^2, T/F",
    "Default values": "0, 0, 0, false",
    "Description": "Target kinematic setpoint for the actuators",
    "Senders": "BB",
    "Receivers": "ACU",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 20
  },
  {
    "ID": 75,
    "Name": "AVC_Faults",
    "Field names": "disabledByTemperature, disabledByInputVoltage, disabledByOutputVoltage, disabledByOutputCurrent, disabledByKillswitch",
    "Data types": "bool: 1, bool: 1, bool: 1, bool: 1, bool: 1",
    "Units": "T/F, T/F, T/F, T/F, T/F",
    "Default values": "false, false, false, false, false",
    "Description": "Whether any faults occurred during normal operation of the AVC",
    "Senders": "AVC",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 101,
    "Name": "LVC_InterlockOK",
    "Field names": "imdOk, hvilOk",
    "Data types": "bool, bool",
    "Units": "T/F, T/F",
    "Default values": "0,0",
    "Description": "Indicates the IMD OK and HVIL OK signals.",
    "Senders": "LVC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 102,
    "Name": "LVC_EmergencyState",
    "Field names": "inEmergencyState",
    "Data types": "bool",
    "Units": "T/F",
    "Default values": 0,
    "Description": "Whether or not the car is in emergency state. Which is the case if any of the emergency buttons is pressed.",
    "Senders": "LVC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 1
  },
  {
    "ID": 103,
    "Name": "LVC_AOPSUPower",
    "Field names": "current, voltage",
    "Data types": "uint16_t, uint16_t",
    "Units": "mV, mA",
    "Default values": "0,0",
    "Description": "Current drawn from the standby AOPSU. Voltage created by the AOPSU",
    "Senders": "LVC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 500
  },
  {
    "ID": 104,
    "Name": "LVC_LVPower",
    "Field names": "current, voltage",
    "Data types": "uint16_t, uint16_t",
    "Units": "mV, mA",
    "Default values": "0,0",
    "Description": "Indicates the current flow after the LV converters, measured by the LV_CUR_ADC. Voltage after the LV converters, measured by LV_V_ADC",
    "Senders": "LVC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 500
  },
  {
    "ID": 105,
    "Name": "LVC_BMSHVOk",
    "Field names": "bmsHVOK",
    "Data types": "bool",
    "Units": "T/F",
    "Default values": 0,
    "Description": "Indicates whether or not the BMS HV OK signal is high.",
    "Senders": "LVC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 30
  },
  {
    "ID": 106,
    "Name": "LVC_HVUnderVoltage",
    "Field names": "HVInBoundaries",
    "Data types": "bool",
    "Units": "T/F",
    "Default values": 0,
    "Description": "Indicates whether or not the HV voltage is within safe operating boundaries.",
    "Senders": "LVC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 30
  },
  {
    "ID": 107,
    "Name": "LVC_StandbyPSUConnected",
    "Field names": "psuConnected",
    "Data types": "bool",
    "Units": "T/F",
    "Default values": 0,
    "Description": "Indicates whether the Standby PSU is connected to the LVC and is within normal operation bounds.",
    "Senders": "LVC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 108,
    "Name": "LVC_NTC1",
    "Field names": "temp",
    "Data types": "int16_t",
    "Units": "ddegC",
    "Default values": 0,
    "Description": "Temperature measured by NTC1 in dC",
    "Senders": "LVC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 109,
    "Name": "LVC_NTC2",
    "Field names": "temp",
    "Data types": "int16_t",
    "Units": "ddegC",
    "Default values": 0,
    "Description": "Temperature measured by NTC2 in dC",
    "Senders": "LVC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 110,
    "Name": "LVC_NTC3",
    "Field names": "temp",
    "Data types": "int16_t",
    "Units": "ddegC",
    "Default values": 0,
    "Description": "Temperature measured by NTC3 in dC",
    "Senders": "LVC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 111,
    "Name": "LVC_NTC4",
    "Field names": "temp",
    "Data types": "int16_t",
    "Units": "ddegC",
    "Default values": 0,
    "Description": "Temperature measured by NTC4 in dC",
    "Senders": "LVC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 112,
    "Name": "LVC_ConvCount",
    "Field names": "convsEnabled",
    "Data types": "uint8_t",
    "Units": "-",
    "Default values": 0,
    "Description": "Emits the number of converters currently turned on. Should not be used for timing of the converter count changes. That can be obtained from the LVStatus message.",
    "Senders": "LVC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 1
  },
  {
    "ID": 113,
    "Name": "LVC_TimeoutSensor",
    "Field names": "ignoreMe",
    "Data types": "bool",
    "Units": "T/F",
    "Default values": 0,
    "Description": "Used to wake an actuator that has to act based on a timeout.",
    "Senders": "LVC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 114,
    "Name": "LVC_KeyStatus",
    "Field names": "keyStatus",
    "Data types": "KeyStatus",
    "Units": "Key status",
    "Default values": "KeyStatus::Off",
    "Description": "Indicates the position of the key",
    "Senders": "LVC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 115,
    "Name": "LVC_Version",
    "Field names": "controller_major_version, controller_minor_version, eslib_major_version, eslib_minor_version, csv2cpp_major_version, csv2cpp_minor_version",
    "Data types": "uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t",
    "Units": "-,-,-,-,-,-",
    "Default values": "0,0,0,0,0,0",
    "Description": "For logging/debugging",
    "Senders": "LVC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 116,
    "Name": "LVC_EnableBMSCooling",
    "Field names": "enable",
    "Data types": "bool",
    "Units": "T/F",
    "Default values": 0,
    "Description": "Contains whether the BMS should enable cooling due to the LVC registering a temperature which is too high",
    "Senders": "LVC",
    "Receivers": "BMS",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 199,
    "Name": "LVC_EnableLVCFan",
    "Field names": "enableFan",
    "Data types": "bool",
    "Units": "T/F",
    "Default values": 0,
    "Description": "This message can be used to enable the LVC Fan manually. It could be send from the strategy van to enable the Fan in dire situations to prevent disaster.",
    "Senders": "LVC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 128,
    "Name": "CANOpen_SYNC",
    "Field names": "",
    "Data types": "",
    "Units": "",
    "Default values": "",
    "Description": "CANopen SYNC message",
    "Senders": "ACU",
    "Receivers": "SAC, BAC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 129,
    "Name": "SAC_EMCY",
    "Field names": "errorCode, errorRegister, vendorData1, vendorData2",
    "Data types": "uint16_t, uint8_t, uint8_t, uint32_t",
    "Units": "-, -, -, -",
    "Default values": "0, 0, 0, 0",
    "Description": "CANOpen EMCY object for the steering actuator",
    "Senders": "SAC",
    "Receivers": "ACU",
    "Send interval": "",
    "Convert endianness": 0,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 130,
    "Name": "BAC_EMCY",
    "Field names": "errorCode, errorRegister, vendorData1, vendorData2",
    "Data types": "uint16_t, uint8_t, uint8_t, uint32_t",
    "Units": "-, -, -, -",
    "Default values": "0, 0, 0, 0",
    "Description": "CANOpen EMCY object for the braking actuator",
    "Senders": "BAC",
    "Receivers": "ACU",
    "Send interval": "",
    "Convert endianness": 0,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 200,
    "Name": "BMS_SubStates",
    "Field names": "essSubState, satStartupState, ivtStartupState, balancingState, cellOvervoltageState, uvRecoveryState",
    "Data types": "BMSESSSubState, SatelliteStartupState, IVTStartupState, BMSBalancingState, CellOvervoltageLimit, UVRecoveryState",
    "Units": "ESS substate, satellite startup state, IVT startup state, balancing state, cell overvoltage state, undervoltage recovery state",
    "Default values": "BMSESSSubState::Ready, SatelliteStartupState::None, IVTStartupState::None, BMSBalancingState::None, CellOvervoltageLimit::None, UVRecoveryState::None",
    "Description": "Sub-states of the BMS state machine",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": 100,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 201,
    "Name": "BMS_Inputs",
    "Field names": "estop, hvilOk, hvilMid, imdOk, ivtOCS, satFaultInt, hvAuxNeg, hvAuxPos, hvContNegMeas, hvContPosMeas, lvcWake",
    "Data types": "bool:1,bool:1,bool:1,bool:1,bool:1,bool:1,bool:1,bool:1,bool:1,bool:1,bool:1",
    "Units": "high/low,high/low,high/low,high/low,high/low,high/low,high/low,high/low,high/low,high/low,high/low",
    "Default values": "0,0,0,0,0,0,0,0,0,0,0",
    "Description": "Input measurements by the BMS state machine",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": 20,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 20
  },
  {
    "ID": 202,
    "Name": "BMS_OverridesAndContactors",
    "Field names": "hvilOverridden, imdOverridden, ivtOCSOverridden, enableNeg, enablePos, dischargeOff",
    "Data types": "bool,bool,bool,bool,bool,bool",
    "Units": "T/F, T/F, T/F, T/F, T/F, T/F",
    "Default values": "0, 0, 0, 0, 0, 0",
    "Description": "Whether the overrides of the BMS are active and whether contactors are enabled",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": 100,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 203,
    "Name": "BMS_ContinuousCharging",
    "Field names": "maxChargingCurrent, chargingAllowed, cellOverVoltageLimited, overTemperatureLimited",
    "Data types": "uint32_t, bool, bool:1, bool:1",
    "Units": "mA, T/F, T/F, T/F",
    "Default values": "0, 0, 0, 0",
    "Description": "Whether continuous charging is allowed, at which current, and the reason why it isn't allowed if it isn't",
    "Senders": "BMS",
    "Receivers": "ChC, PvC",
    "Send interval": 100,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 204,
    "Name": "BMS_PeakPower",
    "Field names": "allowPeakCharging, allowPeakDischarging",
    "Data types": "bool, bool",
    "Units": "T/F, T/F",
    "Default values": "0, 0",
    "Description": "Whether regenerative braking and high motor power current is allowed",
    "Senders": "BMS",
    "Receivers": "ACU",
    "Send interval": 100,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 205,
    "Name": "BMS_Current",
    "Field names": "current",
    "Data types": "float",
    "Units": "A",
    "Default values": "0.f",
    "Description": "Battery current as given by the IVT",
    "Senders": "BMS",
    "Receivers": "ChC, PvC",
    "Send interval": 5,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 207,
    "Name": "BMS_BatteryPower",
    "Field names": "power",
    "Data types": "float",
    "Units": "W",
    "Default values": "0.f",
    "Description": "Battery power usage",
    "Senders": "BMS",
    "Receivers": "MK5",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 208,
    "Name": "BMS_SatInterfaceState",
    "Field names": "state, error, nSats, satTimeoutCounter, satOK, undervoltage, overvoltage, auxUndervoltage, auxOvervoltage, comparatorUndervoltage, comparatorOvervoltage, communicationFault, systemFault, chipFault, gpiFault",
    "Data types": "BMSSatState, BMSSatError, uint8_t, uint8_t, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1",
    "Units": "state, error, -, -, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F",
    "Default values": "BMSSatState::Unknown, BMSSatError::Unknown, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0",
    "Description": "State of the BMS sat board interface",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": 40,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 209,
    "Name": "BMS_SatBalancingState",
    "Field names": "sat1VoltageComparison, sat2VoltageComparison, sat3VoltageComparison",
    "Data types": "uint16_t, uint16_t, uint16_t",
    "Units": "bit array, bit array, bit array",
    "Default values": "0, 0, 0",
    "Description": "Balancing status of the BMS satellite boards containin the voltage comparisons",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": 40,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 210,
    "Name": "BMS_SatInterfaceControl",
    "Field names": "activate, enableRecoveryUVThreshold",
    "Data types": "bool: 1, bool: 1",
    "Units": "T/F, T/F",
    "Default values": "0, 0",
    "Description": "Control parameters for the BMS sat interface",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": 200,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 211,
    "Name": "BMS_SatBalancingControl",
    "Field names": "sat1BalancingChannels, sat2BalancingChannels, sat3BalancingChannels, balancingThresholdVoltage",
    "Data types": "uint16_t, uint16_t, uint16_t, uint16_t",
    "Units": "bit array, bit array, bit array, mV",
    "Default values": "0,0,0,0",
    "Description": "Control parameters for the BMS sat interface related to balancing",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": 200,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 212,
    "Name": "BMS_SoCSoH",
    "Field names": "soc, soh",
    "Data types": "float, float",
    "Units": "%, %",
    "Default values": "0.f, 0.f",
    "Description": "Battery State of Charge per %,  Battery State of Health per %",
    "Senders": "BMS",
    "Receivers": "FUC, BoC",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 213,
    "Name": "BMS_SatPCBTemperatures",
    "Field names": "sat1pcbTemperature, sat2pcbTemperature, sat3pcbTemperature",
    "Data types": "int16_t, int16_t, int16_t",
    "Units": "c°C, c°C, c°C",
    "Default values": "0, 0, 0",
    "Description": "Sat Board PCB Temperatures, used to discover hot pcb for instance when balancing",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": 40,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 214,
    "Name": "BMS_SatPCBVoltages",
    "Field names": "sat1pcbVoltage, sat2pcbVoltage, sat3pcbVoltage",
    "Data types": "uint16_t, uint16_t, uint16_t",
    "Units": "mV, mV, mV",
    "Default values": "0, 0, 0",
    "Description": "Sat Board PCB Voltage, used to know which stack voltage is highest and lowest",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": 40,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 215,
    "Name": "BMS_Version",
    "Field names": "swMajor, swMinor, eslibMajor, eslibMinor, cliMajor, cliMinor",
    "Data types": "uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t",
    "Units": "#, #, #, #, #, #",
    "Default values": "0, 0, 0, 0, 0, 0",
    "Description": "BMS version message",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 216,
    "Name": "BMS_PCBTemperatures",
    "Field names": "ntc1, ntc2, ntc3",
    "Data types": "int16_t, int16_t, int16_t",
    "Units": "c°C, c°C, c°C",
    "Default values": "0, 0, 0",
    "Description": "PCB temperatures measured by the NTC's on the BMS",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": 200,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 217,
    "Name": "BMS_HVMeasurements",
    "Field names": "batteryVoltage, busVoltage",
    "Data types": "float, float",
    "Units": "V, V",
    "Default values": "0.f, 0.f",
    "Description": "Voltage measurements of the battery and the bus as received from the IVT",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": 100,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 218,
    "Name": "BMS_IVTOCSettings",
    "Field names": "state, chargingLimit, dischargingLimit",
    "Data types": "IVTLimitState, IVTChargingLimitSetting, IVTDischargingLimitSetting",
    "Units": "state, state, state",
    "Default values": "IVTLimitState::IVTOff, IVTChargingLimitSetting::IVTOff, IVTDischargingLimitSetting::IVTOff",
    "Description": "Settings of the IVT current thresholds",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": 200,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 219,
    "Name": "BMS_ContactorHistory",
    "Field names": "ocs_timer, prerelay, pos, neg",
    "Data types": "uint32_t, bool:1, bool:1, bool:1",
    "Units": "us, T/F, T/F, T/F",
    "Default values": "0,0,0,0",
    "Description": "Contactor history on the BMS",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": 500,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 220,
    "Name": "BMS_IVTDebugging",
    "Field names": "rdErrorCount, tdErrorCount, written",
    "Data types": "uint8_t, uint8_t, uint8_t",
    "Units": "-, -, -",
    "Default values": "0, 0, 0",
    "Description": "Debugging data for the IVT issue on the BMS",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": 200,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 221,
    "Name": "BMS_CoulombCounter",
    "Field names": "counter",
    "Data types": "int64_t",
    "Units": "As",
    "Default values": 0,
    "Description": "Coulomb counter of the BMS",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 222,
    "Name": "BMS_WhCounter",
    "Field names": "counter",
    "Data types": "int64_t",
    "Units": "Wh",
    "Default values": 0,
    "Description": "Cumulative Wh counter of the BMS",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 231,
    "Name": "BMS_ResetCoulombCounter",
    "Field names": "counter",
    "Data types": "int64_t",
    "Units": "As",
    "Default values": 0,
    "Description": "Reset value for the coulomb counter of the BMS, can only be written while in ESS",
    "Senders": "BMS Servicing",
    "Receivers": "BMS",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 232,
    "Name": "BMS_ResetWhCounter",
    "Field names": "counter",
    "Data types": "int64_t",
    "Units": "As",
    "Default values": 0,
    "Description": "Reset value for the Wh counter of theBMS, can only be written while in ESS",
    "Senders": "BMS Servicing",
    "Receivers": "BMS",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 233,
    "Name": "BMS_IVTErrorMask",
    "Field names": "measDB2, measDB3, sysDB2, sysDB3",
    "Data types": "uint8_t, uint8_t, uint8_t, uint8_t",
    "Units": "-,-,-,-",
    "Default values": "0,0,0,0",
    "Description": "Error bits of the IVT",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 234,
    "Name": "BMS_IMDStatusLatched",
    "Field names": "insulationValue, frequencyHz, state",
    "Data types": "uint32_t, uint16_t, IMDMeasurement",
    "Units": "kOhm, Hz, state",
    "Default values": "0, 0, IMDMeasurement::NoData",
    "Description": "Contents of the BMS_IMDStatus message during Shutdown state. This message is ONLY updated when the IMD interface is in Shutdown state",
    "Senders": "BMS",
    "Receivers": "MK5",
    "Send interval": 100,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 240,
    "Name": "BMS_GitInfo",
    "Field names": "hash,controllerRepoState,eslibRepoState,canspecRepoState",
    "Data types": "uint32_t,RepoState,RepoState,RepoState",
    "Units": "-,-,-,-",
    "Default values": "0,RepoState::Unknown,RepoState::Unknown,RepoState::Unknown",
    "Description": "Git repository state of the BMS",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 241,
    "Name": "BMS_BuildTimeStamp",
    "Field names": "year,month,day,hour,minute",
    "Data types": "uint16_t,Month,uint8_t,uint8_t,uint8_t",
    "Units": "year,month,day,hour,minute",
    "Default values": "0,Month::Unknown,0,0,0",
    "Description": "Timestamp of the build of the current BMS binary",
    "Senders": "BMS",
    "Receivers": "BMS",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 300,
    "Name": "ACU_Version",
    "Field names": "swMajor, swMinor, eslibMajor, eslibMinor, cliMajor, cliMinor",
    "Data types": "uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t",
    "Units": "#, #, #, #, #, #",
    "Default values": "0, 0, 0, 0, 0, 0",
    "Description": "ACU version message",
    "Senders": "ACU",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 301,
    "Name": "ACU_Keepalive",
    "Field names": "mode, bmsAlive, ssbAlive, srvRegenAlive, esbAlive, inverter",
    "Data types": "ACUMode, bool: 1, bool: 1, bool: 1, bool: 1, InverterType",
    "Units": "Mode, T/F, T/F, T/F, T/F, Inverter type",
    "Default values": "ACUMode::WSC, 0, 0, 0, 0, InverterType::Unknown",
    "Description": "Keepalive and mode of the ACU",
    "Senders": "ACU",
    "Receivers": "",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 302,
    "Name": "ACU_Regenerative",
    "Field names": "amount, enabled",
    "Data types": "float, bool : 1",
    "Units": "0-1, T/F",
    "Default values": "0.f, 0",
    "Description": "Whether regenerative braking is enabled or not and the amount with which there is currently being braked regeneratively",
    "Senders": "ACU",
    "Receivers": "BoC",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 303,
    "Name": "ACU_Pedals",
    "Field names": "throttle, brake",
    "Data types": "float, float",
    "Units": "-, -",
    "Default values": "0.f, 0.f",
    "Description": "Fused pedal measurements",
    "Senders": "ACU",
    "Receivers": "",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 304,
    "Name": "ACU_PedalRegenerative",
    "Field names": "pedalRegenAmount",
    "Data types": "float",
    "Units": "0-1",
    "Default values": "0.f",
    "Description": "Amount of regenerative braking according to the pedal",
    "Senders": "ACU",
    "Receivers": "",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 305,
    "Name": "ACU_ThrottlePedal",
    "Field names": "sensor1, sensor2",
    "Data types": "float, float",
    "Units": "-, -",
    "Default values": "0.f, 0.f",
    "Description": "Measurement of both throttle pedal sensors",
    "Senders": "ACU",
    "Receivers": "",
    "Send interval": 50,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 306,
    "Name": "ACU_BrakePedal",
    "Field names": "sensor1, sensor2",
    "Data types": "float, float",
    "Units": "-, -",
    "Default values": "0.f, 0.f",
    "Description": "Measurement of both brake pedal sensors",
    "Senders": "ACU",
    "Receivers": "",
    "Send interval": 50,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 307,
    "Name": "ACU_BrakingSystemStatus",
    "Field names": "pressure, brakingSystemOK, handbrakeActive",
    "Data types": "float, bool: 1, bool: 1",
    "Units": "?, T/F, T/F",
    "Default values": "0.f, false, false",
    "Description": "Pressure measured in the braking system, and whether the system is OK",
    "Senders": "ACU",
    "Receivers": "FUC, BoC",
    "Send interval": 5,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 320,
    "Name": "ACU_MotorPower",
    "Field names": "left, right",
    "Data types": "float, float",
    "Units": "W, W",
    "Default values": "0.f, 0.f",
    "Description": "Power measurement of both motors",
    "Senders": "ACU",
    "Receivers": "",
    "Send interval": 5,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 321,
    "Name": "ACU_MotorTemperature",
    "Field names": "left, right",
    "Data types": "float, float",
    "Units": "deg C, deg C",
    "Default values": "0.f, 0.f",
    "Description": "Temperature measurement of both motors",
    "Senders": "ACU",
    "Receivers": "",
    "Send interval": 50,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 1
  },
  {
    "ID": 322,
    "Name": "ACU_InverterTemperature",
    "Field names": "left, right",
    "Data types": "float, float",
    "Units": "deg C, deg C",
    "Default values": "0.f, 0.f",
    "Description": "Temperature measurement of both inverters",
    "Senders": "ACU",
    "Receivers": "",
    "Send interval": 50,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 1
  },
  {
    "ID": 323,
    "Name": "ACU_InverterLimitFlags",
    "Field names": "leftMotorDerated, leftInverterDerated, leftMotorTempLimit, leftInverterTempLimit, leftCurrentLimit, pad1, rightMotorDerated, rightInverterDerated, rightMotorTempLimit, rightInverterTempLimit, rightCurrentLimit, pad2",
    "Data types": "bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, uint16_t: 11, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, uint16_t: 11",
    "Units": "b,b,b,b,b,p,b,b,b,b,b,p",
    "Default values": "0,0,0,0,0,0,0,0,0,0,0,0",
    "Description": "Limit flags of the inverters",
    "Senders": "ACU",
    "Receivers": "",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 330,
    "Name": "ACU_VelocitySetpoint",
    "Field names": "setpoint",
    "Data types": "float",
    "Units": "m/s",
    "Default values": "0.f",
    "Description": "Current setpoint used for longitudinal motion control on the ACU",
    "Senders": "ACU",
    "Receivers": "",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 331,
    "Name": "ACU_CCControllerState",
    "Field names": "error, integrator",
    "Data types": "float, float",
    "Units": "m/s, m",
    "Default values": "0.f, 0.f",
    "Description": "Current state of the PI Cruise Control feedback controller",
    "Senders": "ACU",
    "Receivers": "",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 332,
    "Name": "ACU_CCControllerParams",
    "Field names": "kp, ki",
    "Data types": "float, float",
    "Units": "-, -",
    "Default values": "0.f, 0.f",
    "Description": "Cruise Control PI feedback controller tuning parameters",
    "Senders": "ACU",
    "Receivers": "",
    "Send interval": 50,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 1
  },
  {
    "ID": 340,
    "Name": "ACU_DSSStatus",
    "Field names": "state, killswitchActive",
    "Data types": "ControlState, bool: 1",
    "Units": "control state, T/F",
    "Default values": "ControlState::Unknown, true",
    "Description": "Control state for DSS on the ACU",
    "Senders": "ACU",
    "Receivers": "BB, AVC",
    "Send interval": 5,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 20
  },
  {
    "ID": 341,
    "Name": "ACU_DSSPrecheckErrors",
    "Field names": "nErrs, error1, error2, error3, error4, error5, error6, error7",
    "Data types": "uint8_t, DSSPrecheckError, DSSPrecheckError, DSSPrecheckError, DSSPrecheckError, DSSPrecheckError, DSSPrecheckError, DSSPrecheckError",
    "Units": "n, error, error, error, error, error, error, error",
    "Default values": "0, DSSPrecheckError::None, DSSPrecheckError::None, DSSPrecheckError::None, DSSPrecheckError::None, DSSPrecheckError::None, DSSPrecheckError::None, DSSPrecheckError::None",
    "Description": "Errors that occurred during DSS precheck",
    "Senders": "ACU",
    "Receivers": "BB",
    "Send interval": 50,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 1
  },
  {
    "ID": 342,
    "Name": "ACU_DSSActuationErrors",
    "Field names": "nErrs, error1, error2, error3, error4, error5, error6, error7",
    "Data types": "uint8_t, DSSActuationError, DSSActuationError, DSSActuationError, DSSActuationError, DSSActuationError, DSSActuationError, DSSActuationError",
    "Units": "n, error, error, error, error, error, error, error",
    "Default values": "0, DSSActuationError::None, DSSActuationError::None, DSSActuationError::None, DSSActuationError::None, DSSActuationError::None, DSSActuationError::None, DSSActuationError::None",
    "Description": "Errors that occurred during DSS actuation",
    "Senders": "ACU",
    "Receivers": "BB",
    "Send interval": 50,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 1
  },
  {
    "ID": 343,
    "Name": "ACU_CANOpenInterfaceControl",
    "Field names": "enable",
    "Data types": "bool",
    "Units": "T/F",
    "Default values": false,
    "Description": "Control message for the ACU CANopen interface",
    "Senders": "ACU",
    "Receivers": "",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 344,
    "Name": "ACU_CANOpenInterfaceState",
    "Field names": "state",
    "Data types": "CANOpenInterfaceState",
    "Units": "state",
    "Default values": "CANOpenInterfaceState::Off",
    "Description": "Current state of the ACU CANopen interface",
    "Senders": "ACU",
    "Receivers": "",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 345,
    "Name": "ACU_SACState",
    "Field names": "nodeState, interfaceState",
    "Data types": "CANOpenNodeState, CANOpenInterfaceDeviceState",
    "Units": "state, state",
    "Default values": "CANOpenNodeState::Unknown, CANOpenInterfaceDeviceState::Unknown",
    "Description": "State of the steering actuator CANopen node",
    "Senders": "ACU",
    "Receivers": "",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 346,
    "Name": "ACU_BACState",
    "Field names": "nodeState, interfaceState",
    "Data types": "CANOpenNodeState, CANOpenInterfaceDeviceState",
    "Units": "state, state",
    "Default values": "CANOpenNodeState::Unknown, CANOpenInterfaceDeviceState::Unknown",
    "Description": "State of the steering actuator CANopen node",
    "Senders": "ACU",
    "Receivers": "",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 347,
    "Name": "ACU_DSSActuation",
    "Field names": "state, error, startingState, enableInverters, inverterSetpoint",
    "Data types": "DSSActuationState, DSSControllerError,DSSControllerStartingStage, bool, float",
    "Units": "state, error, stage, T/F, 0-1",
    "Default values": "DSSActuationState::Unknown, DSSControllerError::None, DSSControllerStartingStage::None, false, 0.f",
    "Description": "State of the DSS control component and setpoint of the DSS component to the inverters",
    "Senders": "ACU",
    "Receivers": "",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 348,
    "Name": "ACU_EnableDSSVoltage",
    "Field names": "enable",
    "Data types": "bool",
    "Units": "T/F",
    "Default values": 0,
    "Description": "Indication from the ACU to the LVC on whether the DSS actuator voltage should be enabled",
    "Senders": "ACU",
    "Receivers": "LVC",
    "Send interval": 5,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 349,
    "Name": "ACU_PlanarAcceleration",
    "Field names": "x, y",
    "Data types": "float, float",
    "Units": "m/s^2, m/s^2",
    "Default values": "0.f, 0.f",
    "Description": "X and Y components of the acceleration vector measured by the ACU",
    "Senders": "ACU",
    "Receivers": "",
    "Send interval": 5,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 350,
    "Name": "ACU_BrakingPrecheck",
    "Field names": "state",
    "Data types": "BrakingPrecheckState",
    "Units": "state",
    "Default values": "BrakingPrecheckState::Unknown",
    "Description": "Braking precheck state",
    "Senders": "ACU",
    "Receivers": "BB",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 351,
    "Name": "ACU_BrakingPressure",
    "Field names": "sensor1, sensor2",
    "Data types": "float, float",
    "Units": "?, ?",
    "Default values": "0.f, 0.f",
    "Description": "Pressure measured by the redundant braking sensors",
    "Senders": "ACU",
    "Receivers": "",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 352,
    "Name": "ACU_BrakingFluidLevel",
    "Field names": "sensor1, sensor2",
    "Data types": "bool: 1, bool: 1",
    "Units": "T/F, T/F",
    "Default values": "false, false",
    "Description": "Values measured by the braking fluid level sensors",
    "Senders": "ACU",
    "Receivers": "",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 353,
    "Name": "ACU_BrakingSystemFaults",
    "Field names": "pressureSensorsDifferent, pressureSensor1OOB, pressureSensor2OOB, underpressure, levelSensorsDifferent, underlevel",
    "Data types": "bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1",
    "Units": "T/F, T/F, T/F, T/F, T/F, T/F",
    "Default values": "false, false, false, false, false, false",
    "Description": "Errors detected by the braking system monitor",
    "Senders": "ACU",
    "Receivers": "",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 360,
    "Name": "ACU_SteeringAngle",
    "Field names": "steeringAngle",
    "Data types": "float",
    "Units": "degrees",
    "Default values": "0.f",
    "Description": "Steering angle as measured by the ACU",
    "Senders": "ACU",
    "Receivers": "BB",
    "Send interval": 5,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 370,
    "Name": "ACU_DareCCSetpoint",
    "Field names": "setpoint",
    "Data types": "float",
    "Units": "km/h",
    "Default values": "0.f",
    "Description": "Dare CC setpoint",
    "Senders": "ACU Dare setpoint",
    "Receivers": "ACU",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 371,
    "Name": "ACU_DareCCLeftController",
    "Field names": "error, integral",
    "Data types": "float, float",
    "Units": "-, -",
    "Default values": "0.f, 0.f",
    "Description": "Dare CC left controller state",
    "Senders": "ACU",
    "Receivers": "",
    "Send interval": 5,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 372,
    "Name": "ACU_DareCCRightController",
    "Field names": "error, integral",
    "Data types": "float, float",
    "Units": "-, -",
    "Default values": "0.f, 0.f",
    "Description": "Dare CC right controller state",
    "Senders": "ACU",
    "Receivers": "",
    "Send interval": 5,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 373,
    "Name": "ACU_DareCCInverterSetpoints",
    "Field names": "left, right",
    "Data types": "float, float",
    "Units": "-, -",
    "Default values": "0.f, 0.f",
    "Description": "Dare CC setpoints sent to the left and right inverters",
    "Senders": "ACU",
    "Receivers": "",
    "Send interval": 5,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 374,
    "Name": "ACU_DareCCVelocities",
    "Field names": "left, right",
    "Data types": "float, float",
    "Units": "-, -",
    "Default values": "0.f, 0.f",
    "Description": "Velocities",
    "Senders": "ACU",
    "Receivers": "",
    "Send interval": 5,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 375,
    "Name": "ACU_DareCCBusVoltages",
    "Field names": "left, right",
    "Data types": "float, float",
    "Units": "V, V",
    "Default values": "0.f, 0.f",
    "Description": "Voltages",
    "Senders": "ACU",
    "Receivers": "",
    "Send interval": 5,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 376,
    "Name": "ACU_BusErrors",
    "Field names": "mainTx,mainRx,invTx,invRx,cntr",
    "Data types": "uint8_t,uint8_t,uint8_t,uint8_t,uint8_t",
    "Units": "-,-,-,-,-",
    "Default values": "0,0,0,0,0",
    "Description": "Errors of main and sub buses",
    "Senders": "ACU",
    "Receivers": "InvL",
    "Send interval": 5,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 377,
    "Name": "ACU_GitInfo",
    "Field names": "hash,controllerRepoState,eslibRepoState,canspecRepoState",
    "Data types": "uint32_t,RepoState,RepoState,RepoState",
    "Units": "-,-,-,-",
    "Default values": "0,RepoState::Unknown,RepoState::Unknown,RepoState::Unknown",
    "Description": "Git repository state of the ACU",
    "Senders": "ACU",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 378,
    "Name": "ACU_BuildTimeStamp",
    "Field names": "year,month,day,hour,minute",
    "Data types": "uint16_t,Month,uint8_t,uint8_t,uint8_t",
    "Units": "year,month,day,hour,minute",
    "Default values": "0,Month::Unknown,0,0,0",
    "Description": "Timestamp of the build of the current ACU binary",
    "Senders": "ACU",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 387,
    "Name": "MPPT1_CurrentAndVoltageIn",
    "Field names": "currentIn, voltageIn",
    "Data types": "float, float",
    "Units": "mA, V",
    "Default values": "0.f, 0.f",
    "Description": "MPPT 1 current IN and voltage IN",
    "Senders": "MPPT1",
    "Receivers": "PvC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "Mirror=true",
    "Send frequency": 0
  },
  {
    "ID": 388,
    "Name": "MPPT2_CurrentAndVoltageIn",
    "Field names": "currentIn, voltageIn",
    "Data types": "float, float",
    "Units": "mA, V",
    "Default values": "0.f, 0.f",
    "Description": "MPPT 2 current IN and voltage IN",
    "Senders": "MPPT2",
    "Receivers": "PvC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "Mirror=true",
    "Send frequency": 0
  },
  {
    "ID": 389,
    "Name": "MPPT3_CurrentAndVoltageIn",
    "Field names": "currentIn, voltageIn",
    "Data types": "float, float",
    "Units": "mA, V",
    "Default values": "0.f, 0.f",
    "Description": "MPPT 3 current IN and voltage IN",
    "Senders": "MPPT3",
    "Receivers": "PvC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "Mirror=true",
    "Send frequency": 0
  },
  {
    "ID": 400,
    "Name": "PvC_Version",
    "Field names": "swMajor, swMinor, eslibMajor, eslibMinor, cliMajor, cliMinor",
    "Data types": "uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t",
    "Units": "#, #, #, #, #, #",
    "Default values": "0, 0, 0, 0, 0, 0",
    "Description": "PvC version message",
    "Senders": "PvC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 401,
    "Name": "PvC_Keepalive",
    "Field names": "bmsAlive",
    "Data types": "bool: 1",
    "Units": "T/F",
    "Default values": 0,
    "Description": "Keepalive of the PvC",
    "Senders": "PvC",
    "Receivers": "",
    "Send interval": 5,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 402,
    "Name": "PvC_SolarChargingState",
    "Field names": "state, error",
    "Data types": "SolarChargingState, SolarChargingError",
    "Units": "state, error",
    "Default values": "SolarChargingState::Unknown, SolarChargingError::None",
    "Description": "State of the solar charging system",
    "Senders": "PvC",
    "Receivers": "FUC",
    "Send interval": 5,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 403,
    "Name": "PvC_MPPTState",
    "Field names": "mppt1, mppt2, mppt3",
    "Data types": "MPPTState, MPPTState, MPPTState",
    "Units": "state, state, state",
    "Default values": "MPPTState::Unknown, MPPTState::Unknown, MPPTState::Unknown",
    "Description": "State of the MPPTs connected to the PvC",
    "Senders": "PvC",
    "Receivers": "FUC",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 404,
    "Name": "PvC_CurrentMeasurements",
    "Field names": "mppt1, mppt2, mppt3",
    "Data types": "int16_t, int16_t, int16_t",
    "Units": "mA, mA, mA",
    "Default values": "0, 0, 0",
    "Description": "Current measurement per MPPT, with positive current being from MPPT to HV bus",
    "Senders": "PvC",
    "Receivers": "",
    "Send interval": 50,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 405,
    "Name": "PvC_MPPTCurrents",
    "Field names": "mppt1, mppt2, mppt3",
    "Data types": "int16_t, int16_t, int16_t",
    "Units": "mA, mA, mA",
    "Default values": "0, 0, 0",
    "Description": "Current measurement per MPPT, with positive current being from MPPT to HV bus",
    "Senders": "PvC",
    "Receivers": "",
    "Send interval": 5,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 406,
    "Name": "PvC_MPPTTemperatures",
    "Field names": "mppt1, mppt2, mppt3",
    "Data types": "int16_t, int16_t, int16_t",
    "Units": "cdegC, cdegC, cdegC",
    "Default values": "0, 0, 0",
    "Description": "PCB temperatures per MPPT",
    "Senders": "PvC",
    "Receivers": "",
    "Send interval": "10e",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 500,
    "Name": "ChC_Version",
    "Field names": "swMajor, swMinor, eslibMajor, eslibMinor, cliMajor, cliMinor",
    "Data types": "uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t",
    "Units": "#, #, #, #, #, #",
    "Default values": "0, 0, 0, 0, 0, 0",
    "Description": "ChC version message",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 501,
    "Name": "ChC_Keepalive",
    "Field names": "bmsAlive, pvcAlive",
    "Data types": "bool: 1, bool: 1",
    "Units": "T/F, T/F",
    "Default values": "0, 0",
    "Description": "Keepalive of the ChC",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 502,
    "Name": "ChC_MainsState",
    "Field names": "state, error, relayClosed, relayStatus, mosfetClosed, lockActive",
    "Data types": "MainsChargingState, ChargingError, bool:1, bool:1, bool:1, bool: 1",
    "Units": "state, error reason, T/F, T/F, T/F, T/F",
    "Default values": "MainsChargingState::Unknown, ChargingError::None, 0, 0, 0, 0",
    "Description": "State of the charge controller and possible error reasons",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 5,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 503,
    "Name": "ChC_Ch1ConnState",
    "Field names": "periodFlag, nMsgs, nRecv",
    "Data types": "uint8_t, uint8_t, uint8_t",
    "Units": "-, -, -",
    "Default values": "0, 0, 0",
    "Description": "Flag for request/response periods, number of messages sent to charger 1, number of messages received for each charger",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 2,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 504,
    "Name": "ChC_Ch2ConnState",
    "Field names": "periodFlag, nMsgs, nRecv",
    "Data types": "uint8_t, uint8_t, uint8_t",
    "Units": "-, -, -",
    "Default values": "0, 0, 0",
    "Description": "Flag for request/response periods, number of messages sent to charger 2, number of messages received for each charger",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 2,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 505,
    "Name": "ChC_Ch3ConnState",
    "Field names": "periodFlag, nMsgs, nRecv",
    "Data types": "uint8_t, uint8_t, uint8_t",
    "Units": "-, -, -",
    "Default values": "0, 0, 0",
    "Description": "Flag for request/response periods, number of messages sent to charger 3, number of messages received for each charger",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 2,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 506,
    "Name": "ChC_ChargersState",
    "Field names": "ch1OK, ch2OK, ch3OK, ch1Alive, ch2Alive, ch3Alive, pad,ch1HiTemp,ch1OPOff,ch1ACFail,ch1Short,ch1OLP,ch1OVP,ch1OTP,ch1FanFail,ch2HiTemp,ch2OPOff,ch2ACFail,ch2Short,ch2OLP,ch2OVP,ch2OTP,ch2FanFail,ch3HiTemp,ch3OPOff,ch3ACFail,ch3Short,ch3OLP,ch3OVP,ch3OTP,ch3FanFail",
    "Data types": "bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, uint8_t: 2, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1",
    "Units": "T/F, T/F, T/F, T/F, T/F, T/F, -, T/F,T/F,T/F,T/F,T/F,T/F,T/F,T/F, T/F,T/F,T/F,T/F,T/F,T/F,T/F,T/F, T/F,T/F,T/F,T/F,T/F,T/F,T/F,T/F",
    "Default values": "false,false,false, false,false,false, 0, 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0",
    "Description": "State of the MW3200 chargers connected to the ChC",
    "Senders": "ChC",
    "Receivers": "FUC",
    "Send interval": 20,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 507,
    "Name": "ChC_CurrentControlSetpoint",
    "Field names": "currentInMax, currentOutMax, enable",
    "Data types": "uint16_t, uint16_t, bool:1",
    "Units": "cA, cA, T/F",
    "Default values": "0.f, 0.f, false",
    "Description": "Setpoint for the ChC and whether to enable current control",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 508,
    "Name": "ChC_ChargerSetpoint",
    "Field names": "current, voltage",
    "Data types": "float, float",
    "Units": "A, V",
    "Default values": "0.f, 0.f",
    "Description": "Setpoint (I_OUT, V_OUT) that is written to the chargers",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 509,
    "Name": "ChC_BusMeasurement",
    "Field names": "voltage, current",
    "Data types": "float, float",
    "Units": "V, A",
    "Default values": "0.f, 0.f",
    "Description": "Voltage and current measured at the bus side of the chargers",
    "Senders": "ChC",
    "Receivers": "BoC",
    "Send interval": 20,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 510,
    "Name": "ChC_ValidatedPVCurrent",
    "Field names": "current, method",
    "Data types": "float, PVCurrentMethod",
    "Units": "A, method",
    "Default values": "0.f, PVCurrentMethod::Unknown",
    "Description": "PV current used by the ChC and the method by which it was obtained",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 510,
    "Name": "IVT_Msg_Debug",
    "Field names": "DB0, DB1, DB2, DB3, DB4, DB5, DB6, DB7",
    "Data types": "int8_t, int8_t, int8_t, int8_t, int8_t, int8_t, int8_t, int8_t",
    "Units": "-, -, -, -, -, -, -, -",
    "Default values": "0, 0, 0, 0, 0, 0, 0, 0",
    "Description": "According to IVT datasheet",
    "Senders": "IVT",
    "Receivers": "BMS",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 511,
    "Name": "ChC_InputCurrent",
    "Field names": "current",
    "Data types": "float",
    "Units": "A",
    "Default values": "0.f",
    "Description": "RMS current measured at the input of the charger",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 100,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 512,
    "Name": "ChC_InputVoltage",
    "Field names": "voltage",
    "Data types": "float",
    "Units": "V",
    "Default values": "0.f",
    "Description": "Voltage measured at the input of the charger",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 40,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 513,
    "Name": "SAC_RxPDO1",
    "Field names": "targetTorque, opMode",
    "Data types": "int16_t, EPOS4OpMode",
    "Units": "-, opMode",
    "Default values": "0, EPOS4OpMode::PPM",
    "Description": "Target torque and mode of operation for the Steering Actuator Controller",
    "Senders": "ACU",
    "Receivers": "SAC",
    "Send interval": "",
    "Convert endianness": 0,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 514,
    "Name": "MPPT_PowerLevel",
    "Field names": "powerLevel",
    "Data types": "uint8_t",
    "Units": "%",
    "Default values": 0,
    "Description": "MPPT 1 power level",
    "Senders": "PvC",
    "Receivers": "MPPT1",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 514,
    "Name": "BAC_RxPDO1",
    "Field names": "targetTorque, opMode",
    "Data types": "int16_t, EPOS4OpMode",
    "Units": "-, opMode",
    "Default values": "0, EPOS4OpMode::PPM",
    "Description": "Target torque and mode of operation for the Braking Actuator Controller",
    "Senders": "ACU",
    "Receivers": "BAC",
    "Send interval": "",
    "Convert endianness": 0,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 517,
    "Name": "ChC_ControllerSetting",
    "Field names": "targetCurrent,limitingFactor,eta,enabled",
    "Data types": "float, ChCLimitingFactor, uint8_t,bool:1",
    "Units": "A, Factor, %, T/F",
    "Default values": "0.f, ChCLimitingFactor::BMS, 0, 0",
    "Description": "Target current and limiting factor of the BMS",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 20
  },
  {
    "ID": 518,
    "Name": "ChC_ChargerOutputVoltages",
    "Field names": "ch1Voltage, ch2Voltage, ch3Voltage",
    "Data types": "uint16_t, uint16_t, uint16_t",
    "Units": "dV, dV, dV",
    "Default values": "0, 0, 0",
    "Description": "Output voltages of the separate chargers connected to the ChC",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 20
  },
  {
    "ID": 519,
    "Name": "ChC_ChargerOutputCurrents",
    "Field names": "ch1Current, ch2Current, ch3Current",
    "Data types": "uint16_t, uint16_t, uint16_t",
    "Units": "dA, dA, dA",
    "Default values": "0, 0, 0",
    "Description": "Output currents of the separate chargers connected to the ChC",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 20
  },
  {
    "ID": 520,
    "Name": "ChC_ProtocolState",
    "Field names": "state, current, hasProximity, isCANSetpoint, isChargingPortSetpoint",
    "Data types": "SAEJ1772State, SAEJ1772Current, bool:1, bool:1, bool:1",
    "Units": "state, current, T/F, T/F, T/F",
    "Default values": "SAEJ1772State::Unknown, SAEJ1772Current::Unknown, false, false, false",
    "Description": "State of the SAE J1772 protocol connection on the ChC",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 20,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 521,
    "Name": "ChC_ProtocolMeasurement",
    "Field names": "cpDutyCycle, ppVoltage",
    "Data types": "float, float",
    "Units": "%, V",
    "Default values": "0.f, 0.f",
    "Description": "Measurements of the charging port analog values",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 40,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 522,
    "Name": "ChC_ChargingControlState",
    "Field names": "state, error, bmsAlive",
    "Data types": "ChargingControlState, ChargingControlError, bool:1",
    "Units": "state, error, alive",
    "Default values": "ChargingControlState::Off, ChargingControlError::None, false",
    "Description": "State of the ChC charging control",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 20
  },
  {
    "ID": 523,
    "Name": "ChC_ProtocolAmpacity",
    "Field names": "ampacity",
    "Data types": "float",
    "Units": "A",
    "Default values": "0.f",
    "Description": "Ampacity according to the SAE J1772 protocol in case where the ampacity is equation-based",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 40,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 524,
    "Name": "ChC_ChargerTemperatures",
    "Field names": "ch1Temperature, ch2Temperature, ch3Temperature",
    "Data types": "int16_t, int16_t, int16_t",
    "Units": "ddegC, ddegC, ddegC",
    "Default values": "0, 0, 0",
    "Description": "Charger temperatures",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 40,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 528,
    "Name": "ChC_CurrentCounter",
    "Field names": "wh, as",
    "Data types": "int32_t, int32_t",
    "Units": "Wh, As",
    "Default values": "0,0",
    "Description": "Current counter of the ChC since last start",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 5,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 529,
    "Name": "ChC_AmpacityLimit",
    "Field names": "limit",
    "Data types": "float",
    "Units": "A",
    "Default values": "INFINITY",
    "Description": "Ampacity limit of the ChC",
    "Senders": "ChC",
    "Receivers": "SSB",
    "Send interval": "",
    "Convert endianness": 5,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 550,
    "Name": "ChC_ProtocolSetpoint_Override",
    "Field names": "state, current",
    "Data types": "SAEJ1772State, SAEJ1772Current",
    "Units": "state, current",
    "Default values": "SAEJ1772State::Standby, SAEJ1772Current::None",
    "Description": "CAN override for the ChC protocol setpoint",
    "Senders": "",
    "Receivers": "ChC",
    "Send interval": "",
    "Convert endianness": 0,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 561,
    "Name": "ChC_CurrentControl_State",
    "Field names": "totalControlAction, enable, feedbackEnable, feedForwardEnable, antiWindupEnable",
    "Data types": "float, bool:1, bool:1, bool:1, bool:1",
    "Units": "A, T/F, T/F,T/F,T/F",
    "Default values": "0.f, false, false, false, false",
    "Description": "State of the ChC current controller",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 5,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 562,
    "Name": "ChC_CurrentControl_Feedback",
    "Field names": "feedbackControlAction, integrator",
    "Data types": "float,float",
    "Units": "A, A",
    "Default values": "0.f, 0.f",
    "Description": "State of the feed-back part of the ChC current control subsystem",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 5,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 563,
    "Name": "ChC_CurrentControl_FeedForward",
    "Field names": "feedForwardControlAction",
    "Data types": "float",
    "Units": "A",
    "Default values": "0.f",
    "Description": "State of the feed-forward part of the ChC current control subsystem",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 5,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 564,
    "Name": "ChC_CurrentControl_Saturation",
    "Field names": "lowerBound,upperBound",
    "Data types": "float,float",
    "Units": "A,A",
    "Default values": "0.f, 0.f",
    "Description": "Lower and upper bound of the ChC current control output saturation",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 5,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 570,
    "Name": "ChC_GitInfo",
    "Field names": "hash,controllerRepoState,eslibRepoState,canspecRepoState",
    "Data types": "uint32_t,RepoState,RepoState,RepoState",
    "Units": "-,-,-,-",
    "Default values": "0,RepoState::Unknown,RepoState::Unknown,RepoState::Unknown",
    "Description": "Git repository state of the ACU",
    "Senders": "ACU",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 571,
    "Name": "ChC_BuildTimeStamp",
    "Field names": "year,month,day,hour,minute",
    "Data types": "uint16_t,Month,uint8_t,uint8_t,uint8_t",
    "Units": "year,month,day,hour,minute",
    "Default values": "0,Month::Unknown,0,0,0",
    "Description": "Timestamp of the build of the current ChC binary",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 600,
    "Name": "FUC_Version",
    "Field names": "swMajor, swMinor, eslibMajor, eslibMinor, cliMajor, cliMinor",
    "Data types": "uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t",
    "Units": "#, #, #, #, #, #",
    "Default values": "0, 0, 0, 0, 0, 0",
    "Description": "ChC version message",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 601,
    "Name": "FUC_Keepalive",
    "Field names": "lvcAlive, bmsAlive, acuAlive, pvcAlive, chcAlive, ssbAlive, rauxAlive, bbAlive, mk5Alive, pscbAlive",
    "Data types": "bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1",
    "Units": "T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F",
    "Default values": "0, 0, 0, 0, 0, 0, 0, 0, 0, 0",
    "Description": "FUC keepalive message",
    "Senders": "FUC",
    "Receivers": "",
    "Send interval": 40,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 602,
    "Name": "FUC_PrimaryDisplayMode",
    "Field names": "mode",
    "Data types": "PrimaryDisplayMode",
    "Units": "state",
    "Default values": "PrimaryDisplayMode::RDW",
    "Description": "The mode of the primary display",
    "Senders": "FUC",
    "Receivers": "BoC, PsCB",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 603,
    "Name": "FUC_Input",
    "Field names": "heater, fan, dss, leftDoorOpen, rightDoorOpen",
    "Data types": "bool:1, bool:1, bool: 1, bool: 1, bool: 1",
    "Units": "On/Off, On/Off, On/Off, T/F, T/F",
    "Default values": "0, 0, 0, 0, 0",
    "Description": "The state of the physical inputs present on the FUC",
    "Senders": "FUC",
    "Receivers": "SSB",
    "Send interval": 40,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 604,
    "Name": "FUC_Telltales",
    "Field names": "leftIndicatorBroken, rightIndicatorBroken, leftLowBeamBroken, rightLowBeamBroken",
    "Data types": "bool: 1, bool: 1, bool: 1, bool: 1",
    "Units": "T/F, T/F, T/F, T/F",
    "Default values": "0, 0, 0, 0",
    "Description": "Whether the lights on the FUC are broken",
    "Senders": "FUC",
    "Receivers": "",
    "Send interval": 40,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 605,
    "Name": "FUC_CMSState",
    "Field names": "state",
    "Data types": "CMSState",
    "Units": "state",
    "Default values": "CMSState::Off",
    "Description": "The state of the CMS according to the FUC",
    "Senders": "FUC",
    "Receivers": "PsCB",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 606,
    "Name": "FUC_CMSRightError",
    "Field names": "error",
    "Data types": "CMSError",
    "Units": "error",
    "Default values": "CMSError::None",
    "Description": "Error of the left CMS screen and camera",
    "Senders": "FUC",
    "Receivers": "PsCB",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 607,
    "Name": "FUC_EnableExternalCharging",
    "Field names": "enable",
    "Data types": "uint8_t",
    "Units": "T/F",
    "Default values": 0,
    "Description": "Whether external charging should be enabled upon exiting Drive state",
    "Senders": "FUC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 608,
    "Name": "FUC_SyncTimer",
    "Field names": "timer",
    "Data types": "uint64_t",
    "Units": "us",
    "Default values": 0,
    "Description": "Sync timer for the FUC",
    "Senders": "FUC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 609,
    "Name": "FUC_LogFlag",
    "Field names": "flag",
    "Data types": "bool",
    "Units": "-",
    "Default values": 0,
    "Description": "Log flag for the FUC",
    "Senders": "FUC",
    "Receivers": "",
    "Send interval": 20,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 620,
    "Name": "FUC_DemoTurnOn",
    "Field names": "turnOn",
    "Data types": "bool",
    "Units": "T/F",
    "Default values": false,
    "Description": "Enables the demo turn-on sequence for during the car presentation",
    "Senders": "",
    "Receivers": "FUC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 621,
    "Name": "FUC_GitInfo",
    "Field names": "hash,controllerRepoState,eslibRepoState,canspecRepoState",
    "Data types": "uint32_t,RepoState,RepoState,RepoState",
    "Units": "-,-,-,-",
    "Default values": "0,RepoState::Unknown,RepoState::Unknown,RepoState::Unknown",
    "Description": "Git repository state of the FUC",
    "Senders": "FUC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 622,
    "Name": "FUC_BuildTimeStamp",
    "Field names": "year,month,day,hour,minute",
    "Data types": "uint16_t,Month,uint8_t,uint8_t,uint8_t",
    "Units": "year,month,day,hour,minute",
    "Default values": "0,Month::Unknown,0,0,0",
    "Description": "Timestamp of the build of the current FUC binary",
    "Senders": "FUC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 641,
    "Name": "SAC_TxPDO1",
    "Field names": "actualCurrent, actualTorque",
    "Data types": "int32_t, int16_t",
    "Units": "-, -",
    "Default values": "0, 0",
    "Description": "Actual torque and current of the Steering Actuator",
    "Senders": "SAC",
    "Receivers": "ACU",
    "Send interval": "",
    "Convert endianness": 0,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 642,
    "Name": "BAC_TxPDO1",
    "Field names": "actualCurrent, actualTorque",
    "Data types": "int32_t, int16_t",
    "Units": "-, -",
    "Default values": "0, 0",
    "Description": "Actual torque and current of the Braking Actuator",
    "Senders": "BAC",
    "Receivers": "ACU",
    "Send interval": "",
    "Convert endianness": 0,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 643,
    "Name": "MPPT1_VoltageOutAndPowerIn",
    "Field names": "voltageOut, powerIn",
    "Data types": "float, float",
    "Units": "V, mW",
    "Default values": "0.f, 0.f",
    "Description": "MPPT 1 voltage OUT and power IN",
    "Senders": "MPPT1",
    "Receivers": "PvC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "Mirror=true",
    "Send frequency": 0
  },
  {
    "ID": 644,
    "Name": "MPPT2_VoltageOutAndPowerIn",
    "Field names": "voltageOut, powerIn",
    "Data types": "float, float",
    "Units": "V, mW",
    "Default values": "0.f, 0.f",
    "Description": "MPPT 2 voltage OUT and power IN",
    "Senders": "MPPT2",
    "Receivers": "PvC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "Mirror=true",
    "Send frequency": 0
  },
  {
    "ID": 645,
    "Name": "MPPT3_VoltageOutAndPowerIn",
    "Field names": "voltageOut, powerIn",
    "Data types": "float, float",
    "Units": "V, mW",
    "Default values": "0.f, 0.f",
    "Description": "MPPT 3 voltage OUT and power IN",
    "Senders": "MPPT3",
    "Receivers": "PvC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "Mirror=true",
    "Send frequency": 0
  },
  {
    "ID": 700,
    "Name": "SSB_Version",
    "Field names": "swMajor, swMinor, eslibMajor, eslibMinor, cliMajor, cliMinor",
    "Data types": "uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t",
    "Units": "#, #, #, #, #, #",
    "Default values": "0, 0, 0, 0, 0, 0",
    "Description": "SSB version message",
    "Senders": "SSB",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 701,
    "Name": "SSB_WiperSpeed",
    "Field names": "speed, squirt",
    "Data types": "WiperSpeed, bool",
    "Units": "wiper speed, T/F",
    "Default values": "WiperSpeed::Off, 0",
    "Description": "Speed of the wiper and whether to active the washer pump",
    "Senders": "SSB",
    "Receivers": "FUC",
    "Send interval": 20,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 702,
    "Name": "SSB_CruiseControl",
    "Field names": "setpoint, enable",
    "Data types": "float, bool",
    "Units": "m/s, T/F",
    "Default values": "0.f, 0",
    "Description": "Whether to enable cruise control and the setpoint",
    "Senders": "SSB",
    "Receivers": "ACU",
    "Send interval": 20,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 703,
    "Name": "SSB_Honk",
    "Field names": "enable",
    "Data types": "bool: 1",
    "Units": "On/Off",
    "Default values": 0,
    "Description": "State of the honk according to the SSB",
    "Senders": "SSB",
    "Receivers": "FUC",
    "Send interval": 20,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 704,
    "Name": "SSB_WSCButtons",
    "Field names": "enableRegen, brightenScreen, enableRearCamera",
    "Data types": "bool: 1, bool: 1, bool: 1",
    "Units": "T/F, T/F, T/F",
    "Default values": "0, 0, 0",
    "Description": "Toggling of WSC-specific functions according to the SSB",
    "Senders": "SSB",
    "Receivers": "ACU, PsCB, RAUX",
    "Send interval": 20,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 705,
    "Name": "SSB_ChargingAmpacityLimit",
    "Field names": "limit",
    "Data types": "float",
    "Units": "A",
    "Default values": "INFINITY",
    "Description": "Ampacity limit by the SSB during charging",
    "Senders": "SSB",
    "Receivers": "ChC",
    "Send interval": 20,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 750,
    "Name": "RAUX_Keepalive",
    "Field names": "acuAlive,ssbAlive",
    "Data types": "bool:1, bool:1",
    "Units": "T/F, T/F",
    "Default values": "0,0",
    "Description": "Keepalive of the RAUX",
    "Senders": "RAUX",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 751,
    "Name": "RAUX_Version",
    "Field names": "swMajor, swMinor, eslibMajor, eslibMinor, cliMajor, cliMinor",
    "Data types": "uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t",
    "Units": "#, #, #, #, #, #",
    "Default values": "0, 0, 0, 0, 0, 0",
    "Description": "RAUX version message",
    "Senders": "RAUX",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 752,
    "Name": "RAUX_LightsStatus",
    "Field names": "rearLightBroken, rearLeftIndicatorBroken, rearRightIndicatorBroken, rearFogLightBroken",
    "Data types": "bool: 1, bool: 1, bool: 1, bool: 1",
    "Units": "T/F, T/F, T/F, T/F",
    "Default values": "0, 0, 0, 0",
    "Description": "Status of the lights connected to the RAUX",
    "Senders": "RAUX",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 800,
    "Name": "BB_DSSState",
    "Field names": "state",
    "Data types": "DSSState",
    "Units": "State",
    "Default values": "DSSState::Off",
    "Description": "State of the autonomous system",
    "Senders": "BB",
    "Receivers": "FUC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 850,
    "Name": "AVC_Version",
    "Field names": "swMajor, swMinor, eslibMajor, eslibMinor, cliMajor, cliMinor",
    "Data types": "uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t",
    "Units": "#, #, #, #, #, #",
    "Default values": "0, 0, 0, 0, 0, 0",
    "Description": "AVC version message",
    "Senders": "AVC",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 851,
    "Name": "AVC_Keepalive",
    "Field names": "avcAlive",
    "Data types": "bool: 1",
    "Units": "T/F",
    "Default values": false,
    "Description": "Keepalive of the AVC",
    "Senders": "AVC",
    "Receivers": "",
    "Send interval": 5,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 852,
    "Name": "AVC_State",
    "Field names": "state",
    "Data types": "AVCState",
    "Units": "state",
    "Default values": "AVCState::Unknown",
    "Description": "State of the AVC",
    "Senders": "AVC",
    "Receivers": "",
    "Send interval": 5,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 853,
    "Name": "AVC_DiagnosticGeneral",
    "Field names": "manualOverrideEnabled, fanEnabled",
    "Data types": "bool: 1, bool: 1",
    "Units": "T/F, T/F",
    "Default values": "false, false",
    "Description": "AVC general diagnostic information",
    "Senders": "AVC",
    "Receivers": "",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 854,
    "Name": "AVC_DiagnosticTemp",
    "Field names": "NTCTemp1, NTCTemp2",
    "Data types": "float, float",
    "Units": "Centigrade, Centigrade",
    "Default values": "0.f, 0.f",
    "Description": "AVC diagnostic information of temperatures",
    "Senders": "AVC",
    "Receivers": "",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 855,
    "Name": "AVC_DiagnosticEE",
    "Field names": "converterVoltage, converterCurrent",
    "Data types": "float, float",
    "Units": "Volt, Ampere",
    "Default values": "0.f, 0.f",
    "Description": "AVC diagnostic information of electronics",
    "Senders": "AVC",
    "Receivers": "",
    "Send interval": 10,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 5
  },
  {
    "ID": 856,
    "Name": "AVC_Servicing",
    "Field names": "disableConverter",
    "Data types": "bool: 1",
    "Units": "T/F",
    "Default values": false,
    "Description": "Message to manually disabled the converters of the AVC",
    "Senders": "AVC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 897,
    "Name": "SAC_TxPDO2",
    "Field names": "statusWord, opMode",
    "Data types": "uint16_t, EPOS4OpMode",
    "Units": "status word, opmode",
    "Default values": "0, EPOS4OpMode::PPM",
    "Description": "Status word and operation mode of the Steering Actuator Controller",
    "Senders": "SAC",
    "Receivers": "ACU",
    "Send interval": "",
    "Convert endianness": 0,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 898,
    "Name": "BAC_TxPDO2",
    "Field names": "statusWord, opMode",
    "Data types": "uint16_t, EPOS4OpMode",
    "Units": "status word, opmode",
    "Default values": "0, EPOS4OpMode::PPM",
    "Description": "Status word and operation mode of the Braking Actuator Controller",
    "Senders": "BAC",
    "Receivers": "ACU",
    "Send interval": "",
    "Convert endianness": 0,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 903,
    "Name": "MK5_17Compat_ACUOverrule",
    "Field names": "dnr, overruleDNR, throtSensor1On, throtSensor2On, brakeSensor1On, brakeSensor2On, inverterLOn, inverterROn, regenBrakingOn",
    "Data types": "DNR, bool : 1, bool : 1, bool : 1, bool : 1, bool : 1, bool : 1, bool : 1, bool : 1",
    "Units": "RND, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F",
    "Default values": "DNR::N, 0, 1, 1, 1, 1, 1, 1, 1",
    "Description": "MK5 ACU overrule message (here for MCU '17 compatibility)",
    "Senders": "MK5",
    "Receivers": "ACU",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1000,
    "Name": "BoC_Request_PrimaryDisplayMode",
    "Field names": "requestState",
    "Data types": "PrimaryDisplayMode",
    "Units": "state",
    "Default values": "PrimaryDisplayMode::RDW",
    "Description": "When HVI wants to request the primary screen to switch to a mode",
    "Senders": "BoC",
    "Receivers": "FUC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1001,
    "Name": "BoC_Request_Regenerative",
    "Field names": "enable",
    "Data types": "bool : 1",
    "Units": "T/F",
    "Default values": 0,
    "Description": "When HVI wants to request enabling / disabling regenerative braking",
    "Senders": "BoC",
    "Receivers": "ACU",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1002,
    "Name": "BoC_Request_Autonomy_Sensing",
    "Field names": "enable",
    "Data types": "bool: 1",
    "Units": "T/F",
    "Default values": false,
    "Description": "When HVI wants to request the LVC to turn on the Bluebox",
    "Senders": "BoC",
    "Receivers": "LVC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1003,
    "Name": "BoC_Request_Honk",
    "Field names": "placeHolder",
    "Data types": "uint8_t",
    "Units": "placeHolder",
    "Default values": 0,
    "Description": "When the honk command is sent from the mobile app",
    "Senders": "BoC",
    "Receivers": "FUC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1004,
    "Name": "BoC_Request_VehicleState",
    "Field names": "requestState",
    "Data types": "VehicleState",
    "Units": "state",
    "Default values": "VehicleState::Drive",
    "Description": "When HVI wants to request the LVC to switch to a vehicle state",
    "Senders": "BoC",
    "Receivers": "LVC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1041,
    "Name": "IVT_Msg_Command",
    "Field names": "commandByte, db1, db2, db3, db4, db5, db6, db7",
    "Data types": "uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t",
    "Units": "-, -, -, -, -, -, -, -",
    "Default values": "0, 0, 0, 0, 0, 0, 0, 0",
    "Description": "According to IVT datasheet",
    "Senders": "BMS",
    "Receivers": "IVT",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1050,
    "Name": "PsCB_Version",
    "Field names": "swMajor, swMinor, eslibMajor, eslibMinor, cliMajor, cliMinor",
    "Data types": "uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t",
    "Units": "#, #, #, #, #, #",
    "Default values": "0, 0, 0, 0, 0, 0",
    "Description": "PsCB version message",
    "Senders": "PsCB",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1051,
    "Name": "PsCB_Keepalive",
    "Field names": "lvcAlive, bmsAlive, acuAlive, pvcAlive, chcAlive, ssbAlive, fucAlive, rauxAlive, bbAlive, mk5Alive",
    "Data types": "bool:1,bool:1,bool:1,bool:1,bool:1,bool:1,bool:1,bool:1,bool:1,bool:1",
    "Units": "T/F,T/F,T/F,T/F,T/F,T/F,T/F,T/F,T/F,T/F",
    "Default values": "0,0,0,0,0,0,0,0,0,0",
    "Description": "Keepalive message of the PsCB, containing whether it considers other controllers to be alive or not",
    "Senders": "PsCB",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1052,
    "Name": "PsCB_CMSLeftError",
    "Field names": "error",
    "Data types": "CMSError",
    "Units": "error",
    "Default values": "CMSError::None",
    "Description": "Error of the left CMS screen and camera",
    "Senders": "PsCB",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1060,
    "Name": "ESB_Version",
    "Field names": "swMajor, swMinor, eslibMajor, eslibMinor, cliMajor, cliMinor",
    "Data types": "uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t",
    "Units": "#, #, #, #, #, #",
    "Default values": "0, 0, 0, 0, 0, 0",
    "Description": "ESB version message",
    "Senders": "ESB",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1061,
    "Name": "ESB_SliderPosition",
    "Field names": "position",
    "Data types": "float",
    "Units": "0-1",
    "Default values": "0.f",
    "Description": "Position of the energy slider",
    "Senders": "ESB",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "Mirror=true",
    "Send frequency": 0
  },
  {
    "ID": 1080,
    "Name": "BMS_Sat1_MetaCellVoltages1",
    "Field names": "cell1, cell2, cell3, cell4",
    "Data types": "uint16_t, uint16_t, uint16_t, uint16_t",
    "Units": "mV, mV, mV, mV",
    "Default values": "0, 0, 0, 0",
    "Description": "MetaCell voltages for satellite 1, cells 1 to 4",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": 200,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 1
  },
  {
    "ID": 1081,
    "Name": "BMS_Sat1_MetaCellVoltages2",
    "Field names": "cell5, cell6, cell7, cell8",
    "Data types": "uint16_t, uint16_t, uint16_t, uint16_t",
    "Units": "mV, mV, mV, mV",
    "Default values": "0, 0, 0, 0",
    "Description": "MetaCell voltages for satellite 1, cells 5 to 8",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": 200,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 1
  },
  {
    "ID": 1082,
    "Name": "BMS_Sat1_MetaCellVoltages3",
    "Field names": "cell9, cell10, cell11, cell12",
    "Data types": "uint16_t, uint16_t, uint16_t, uint16_t",
    "Units": "mV, mV, mV, mV",
    "Default values": "0, 0, 0, 0",
    "Description": "MetaCell voltages for satellite 1, cells 9 to 12",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": 200,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 1
  },
  {
    "ID": 1083,
    "Name": "BMS_Sat2_MetaCellVoltages1",
    "Field names": "cell1, cell2, cell3, cell4",
    "Data types": "uint16_t, uint16_t, uint16_t, uint16_t",
    "Units": "mV, mV, mV, mV",
    "Default values": "0, 0, 0, 0",
    "Description": "MetaCell voltages for satellite 2, cells 1 to 4",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": 200,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 1
  },
  {
    "ID": 1084,
    "Name": "BMS_Sat2_MetaCellVoltages2",
    "Field names": "cell5, cell6, cell7, cell8",
    "Data types": "uint16_t, uint16_t, uint16_t, uint16_t",
    "Units": "mV, mV, mV, mV",
    "Default values": "0, 0, 0, 0",
    "Description": "MetaCell voltages for satellite 2, cells 5 to 8",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": 200,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 1
  },
  {
    "ID": 1085,
    "Name": "BMS_Sat2_MetaCellVoltages3",
    "Field names": "cell9, cell10, cell11, cell12",
    "Data types": "uint16_t, uint16_t, uint16_t, uint16_t",
    "Units": "mV, mV, mV, mV",
    "Default values": "0, 0, 0, 0",
    "Description": "MetaCell voltages for satellite 2, cells 9 to 12",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": 200,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 1
  },
  {
    "ID": 1086,
    "Name": "BMS_Sat3_MetaCellVoltages1",
    "Field names": "cell1, cell2, cell3, cell4",
    "Data types": "uint16_t, uint16_t, uint16_t, uint16_t",
    "Units": "mV, mV, mV, mV",
    "Default values": "0, 0, 0, 0",
    "Description": "MetaCell voltages for satellite 3, cells 1 to 4",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": 200,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 1
  },
  {
    "ID": 1087,
    "Name": "BMS_Sat3_MetaCellVoltages2",
    "Field names": "cell5, cell6, cell7, cell8",
    "Data types": "uint16_t, uint16_t, uint16_t, uint16_t",
    "Units": "mV, mV, mV, mV",
    "Default values": "0, 0, 0, 0",
    "Description": "MetaCell voltages for satellite 3, cells 5 to 8",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": 200,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 1
  },
  {
    "ID": 1088,
    "Name": "BMS_Sat3_MetaCellVoltages3",
    "Field names": "cell9, cell10, cell11, cell12",
    "Data types": "uint16_t, uint16_t, uint16_t, uint16_t",
    "Units": "mV, mV, mV, mV",
    "Default values": "0, 0, 0, 0",
    "Description": "MetaCell voltages for satellite 3, cells 9 to 12",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": 200,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 1
  },
  {
    "ID": 1089,
    "Name": "BMS_Sat1_Temperatures",
    "Field names": "chan1, chan2, chan3, chan4, chan5, chan6",
    "Data types": "uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t",
    "Units": "°C,°C,°C,°C,°C,°C",
    "Default values": "0,0,0,0,0,0",
    "Description": "BMS satellite 1 temperature",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": 200,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 1
  },
  {
    "ID": 1090,
    "Name": "BMS_Sat2_Temperatures",
    "Field names": "chan1, chan2, chan3, chan4, chan5, chan6",
    "Data types": "uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t",
    "Units": "°C,°C,°C,°C,°C,°C",
    "Default values": "0,0,0,0,0,0",
    "Description": "BMS satellite 2 temperature",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": 200,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 1
  },
  {
    "ID": 1091,
    "Name": "BMS_Sat3_Temperatures",
    "Field names": "chan1, chan2, chan3, chan4, chan5, chan6",
    "Data types": "uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t",
    "Units": "°C,°C,°C,°C,°C,°C",
    "Default values": "0,0,0,0,0,0",
    "Description": "BMS satellite 3 temperature",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": 200,
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 1
  },
  {
    "ID": 1100,
    "Name": "MK5_GPS",
    "Field names": "lat, lon",
    "Data types": "float, float",
    "Units": "decimal degrees, decimal degrees",
    "Default values": "0, 0",
    "Description": "Last known GPS coördinates of the MK5",
    "Senders": "MK5",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 1101,
    "Name": "MK5_GPSMetaData",
    "Field names": "speed, heading",
    "Data types": "float, float",
    "Units": "m/s, centidegrees",
    "Default values": "0, 0",
    "Description": "Additional GPS data of speed and degrees from north",
    "Senders": "MK5",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 1102,
    "Name": "MK5_Strat_GPS",
    "Field names": "lat, lon",
    "Data types": "float, float",
    "Units": "decimal degrees, decimal degrees",
    "Default values": "0, 0",
    "Description": "Last known GPS coördinates of the MK5",
    "Senders": "MK5",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 1103,
    "Name": "MK5_Strat_GPSMetaData",
    "Field names": "speed, heading",
    "Data types": "float, float",
    "Units": "m/s, centidegrees",
    "Default values": "0, 0",
    "Description": "Additional GPS data of speed and degrees from north",
    "Senders": "MK5",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 1104,
    "Name": "MK5_Tech_GPS",
    "Field names": "lat, lon",
    "Data types": "float, float",
    "Units": "decimal degrees, decimal degrees",
    "Default values": "0, 0",
    "Description": "Last known GPS coördinates of the MK5",
    "Senders": "MK5",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 1105,
    "Name": "MK5_Tech_GPSMetaData",
    "Field names": "speed, heading",
    "Data types": "float, float",
    "Units": "m/s, centidegrees",
    "Default values": "0, 0",
    "Description": "Additional GPS data of speed and degrees from north",
    "Senders": "MK5",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 1106,
    "Name": "MK5_GPSTimeStamp",
    "Field names": "timestamp",
    "Data types": "uint64_t",
    "Units": "mSec since Epoch",
    "Default values": 0,
    "Description": "Additional GPS timestamp",
    "Senders": "MK5",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 10
  },
  {
    "ID": 1110,
    "Name": "BMS_ServicingParams",
    "Field names": "overrideAcc, overrideHVIL, overrideIMD, overrideOvercurrent, resetSoC100",
    "Data types": "bool, bool, bool, bool, bool",
    "Units": "T/F, T/F, T/F, T/F, T/F",
    "Default values": "0, 0, 0, 0, 0",
    "Description": "Parameters for disabling certain processes in the system during servicing or testing",
    "Senders": "",
    "Receivers": "BMS",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1111,
    "Name": "Srv_BMS_BalancingControl",
    "Field names": "enableBalancing",
    "Data types": "bool",
    "Units": "T/F",
    "Default values": 0,
    "Description": "Controls balancing on the BMS",
    "Senders": "Servicing",
    "Receivers": "BMS",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1130,
    "Name": "Srv_CruiseControlOverride",
    "Field names": "setpoint, enable",
    "Data types": "float, bool",
    "Units": "m/s, T/F",
    "Default values": "0.f, false",
    "Description": "Allows for overriding the Cruise Control over CAN",
    "Senders": "",
    "Receivers": "ACU",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1131,
    "Name": "Srv_RegenOverride",
    "Field names": "enablePedalRegen",
    "Data types": "bool: 1",
    "Units": "T/F",
    "Default values": false,
    "Description": "Override flags for regenerative braking",
    "Senders": "ACU servicing",
    "Receivers": "ACU",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1185,
    "Name": "InvL_Status_NLELocomoco",
    "Field names": "_unused1, internalOverTemperature, motorOverTemperature, overcurrent, undercurrent, overvoltage, undervoltage, _undefinedErrorBits, unused2, unused3, txErrCount, rxErrCount",
    "Data types": "uint16_t, bool:1,bool:1,bool:1,bool:1,bool:1,bool:1, uint8_t: 2, uint8_t, uint16_t, uint8_t, uint8_t",
    "Units": "-, -,-,-,-,-,-,-,-, -, -, -",
    "Default values": "0, 0, 0, 0, 0, 0,0,0,0,0,0,0",
    "Description": "Inverter status information",
    "Senders": "InvR",
    "Receivers": "ACU",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "Mirror=true",
    "Send frequency": 0
  },
  {
    "ID": 1186,
    "Name": "InvL_BusMeasurement_NLELocomoco",
    "Field names": "voltage, current",
    "Data types": "float, float",
    "Units": "V, A",
    "Default values": "0.f, 0.f",
    "Description": "Inverter bus measurement",
    "Senders": "InvL,ACU",
    "Receivers": "ACU,MK5",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "Mirror=true",
    "Send frequency": 0
  },
  {
    "ID": 1187,
    "Name": "InvL_VelocityMeasurement_NLELocomoco",
    "Field names": "motorVelocity, vehicleVelocity",
    "Data types": "float, float",
    "Units": "RPM, m/s",
    "Default values": "0.f, 0.f",
    "Description": "Inverter velocity measurement",
    "Senders": "InvL,ACU",
    "Receivers": "ACU,MK5",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "Mirror=true",
    "Send frequency": 0
  },
  {
    "ID": 1195,
    "Name": "InvL_TemperatureMeasurement_NLELocomoco",
    "Field names": "motorTemperature, heatsinkTemperature",
    "Data types": "float, float",
    "Units": "deg C, deg C",
    "Default values": "0.f, 0.f",
    "Description": "Inverter temperature measurement",
    "Senders": "InvL",
    "Receivers": "ACU",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "Mirror=true",
    "Send frequency": 1
  },
  {
    "ID": 1217,
    "Name": "InvR_Status_NLELocomoco",
    "Field names": "_unused1, internalOverTemperature, motorOverTemperature, overcurrent, undercurrent, overvoltage, undervoltage, _undefinedErrorBits, unused2, unused3, txErrCount, rxErrCount",
    "Data types": "uint16_t, bool:1,bool:1,bool:1,bool:1,bool:1,bool:1, uint8_t: 2, uint8_t, uint16_t, uint8_t, uint8_t",
    "Units": "-, -,-,-,-,-,-,-,-, -, -, -",
    "Default values": "0, 0, 0, 0, 0, 0,0,0,0,0,0,0",
    "Description": "Inverter status information",
    "Senders": "InvR",
    "Receivers": "ACU",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "Mirror=true",
    "Send frequency": 0
  },
  {
    "ID": 1218,
    "Name": "InvR_BusMeasurement_NLELocomoco",
    "Field names": "voltage, current",
    "Data types": "float, float",
    "Units": "V, A",
    "Default values": "0.f, 0.f",
    "Description": "Inverter bus measurement",
    "Senders": "InvR,ACU",
    "Receivers": "ACU,MK5",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "Mirror=true",
    "Send frequency": 0
  },
  {
    "ID": 1219,
    "Name": "InvR_VelocityMeasurement_NLELocomoco",
    "Field names": "motorVelocity, vehicleVelocity",
    "Data types": "float, float",
    "Units": "RPM, m/s",
    "Default values": "0.f, 0.f",
    "Description": "Inverter velocity measurement",
    "Senders": "InvR,ACU",
    "Receivers": "ACU,MK5",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "Mirror=true",
    "Send frequency": 0
  },
  {
    "ID": 1155,
    "Name": "MPPT1_Temperatures",
    "Field names": "tempPCB, tempMOSFET",
    "Data types": "int16_t, int16_t",
    "Units": "cdegC, cdegC",
    "Default values": "0, 0",
    "Description": "MPPT 1 PCB and MOSFET temperatures",
    "Senders": "MPPT1",
    "Receivers": "ChC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "Mirror=true",
    "Send frequency": 0
  },
  {
    "ID": 1156,
    "Name": "MPPT2_Temperatures",
    "Field names": "tempPCB, tempMOSFET",
    "Data types": "int16_t, int16_t",
    "Units": "cdegC, cdegC",
    "Default values": "0, 0",
    "Description": "MPPT 2 PCB and MOSFET temperatures",
    "Senders": "MPPT2",
    "Receivers": "ChC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "Mirror=true",
    "Send frequency": 0
  },
  {
    "ID": 1157,
    "Name": "MPPT3_Temperatures",
    "Field names": "tempPCB, tempMOSFET",
    "Data types": "int16_t, int16_t",
    "Units": "cdegC, cdegC",
    "Default values": "0, 0",
    "Description": "MPPT 3 PCB and MOSFET temperatures",
    "Senders": "MPPT3",
    "Receivers": "ChC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "Mirror=true",
    "Send frequency": 0
  },
  {
    "ID": 1227,
    "Name": "InvR_TemperatureMeasurement_NLELocomoco",
    "Field names": "motorTemperature, heatsinkTemperature",
    "Data types": "float, float",
    "Units": "deg C, deg C",
    "Default values": "0.f, 0.f",
    "Description": "Inverter temperature measurement",
    "Senders": "InvL",
    "Receivers": "ACU",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "Mirror=true",
    "Send frequency": 1
  },
  {
    "ID": 1153,
    "Name": "InvR_DriveCommand_NLELocomoco",
    "Field names": "velocity, current",
    "Data types": "float, float",
    "Units": "RPM, [0..1]",
    "Default values": "0.f, 0.f",
    "Description": "Inverter drive command",
    "Senders": "ACU",
    "Receivers": "InvR",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1121,
    "Name": "InvL_DriveCommand_NLELocomoco",
    "Field names": "velocity, current",
    "Data types": "float, float",
    "Units": "RPM, [0..1]",
    "Default values": "0.f, 0.f",
    "Description": "Inverter drive command",
    "Senders": "ACU",
    "Receivers": "InvL",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1200,
    "Name": "Dbg_Uint8_1",
    "Field names": "a, b, c, d, e, f, g, h",
    "Data types": "uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t",
    "Units": "-, -, -, -, -, -, -, -",
    "Default values": "0, 0, 0, 0, 0, 0, 0, 0",
    "Description": "Generic UInt8's for debugging",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1201,
    "Name": "Dbg_Uint8_2",
    "Field names": "a, b, c, d, e, f, g, h",
    "Data types": "uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t",
    "Units": "-, -, -, -, -, -, -, -",
    "Default values": "0, 0, 0, 0, 0, 0, 0, 0",
    "Description": "Generic UInt8's for debugging",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1203,
    "Name": "Dbg_Uint8_3",
    "Field names": "a, b, c, d, e, f, g, h",
    "Data types": "uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t",
    "Units": "-, -, -, -, -, -, -, -",
    "Default values": "0, 0, 0, 0, 0, 0, 0, 0",
    "Description": "Generic UInt8's for debugging",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1204,
    "Name": "Dbg_Uint8_4",
    "Field names": "a, b, c, d, e, f, g, h",
    "Data types": "uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t",
    "Units": "-, -, -, -, -, -, -, -",
    "Default values": "0, 0, 0, 0, 0, 0, 0, 0",
    "Description": "Generic UInt8's for debugging",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1205,
    "Name": "Dbg_Uint16_1",
    "Field names": "a, b, c, d",
    "Data types": "uint16_t, uint16_t, uint16_t, uint16_t",
    "Units": "-, -, -, -",
    "Default values": "0, 0, 0, 0",
    "Description": "Generic UInt16's for debugging",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1206,
    "Name": "Dbg_Uint16_2",
    "Field names": "a, b, c, d",
    "Data types": "uint16_t, uint16_t, uint16_t, uint16_t",
    "Units": "-, -, -, -",
    "Default values": "0, 0, 0, 0",
    "Description": "Generic UInt16's for debugging",
    "Senders": "",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1207,
    "Name": "Dbg_Uint16_3",
    "Field names": "a, b, c, d",
    "Data types": "uint16_t, uint16_t, uint16_t, uint16_t",
    "Units": "-, -, -, -",
    "Default values": "0, 0, 0, 0",
    "Description": "Generic UInt16's for debugging",
    "Senders": "",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1208,
    "Name": "Dbg_Uint16_4",
    "Field names": "a, b, c, d",
    "Data types": "uint16_t, uint16_t, uint16_t, uint16_t",
    "Units": "-, -, -, -",
    "Default values": "0, 0, 0, 0",
    "Description": "Generic UInt16's for debugging",
    "Senders": "",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1209,
    "Name": "Dbg_Uint32_1",
    "Field names": "a, b",
    "Data types": "uint32_t, uint32_t",
    "Units": "-, -",
    "Default values": "0, 0",
    "Description": "Generic UInt32's for debugging",
    "Senders": "",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1210,
    "Name": "Dbg_Uint32_2",
    "Field names": "a, b",
    "Data types": "uint32_t, uint32_t",
    "Units": "-, -",
    "Default values": "0, 0",
    "Description": "Generic UInt32's for debugging",
    "Senders": "",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1211,
    "Name": "Dbg_Uint32_3",
    "Field names": "a, b",
    "Data types": "uint32_t, uint32_t",
    "Units": "-, -",
    "Default values": "0, 0",
    "Description": "Generic UInt32's for debugging",
    "Senders": "",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1212,
    "Name": "Dbg_Uint32_4",
    "Field names": "a, b",
    "Data types": "uint32_t, uint32_t",
    "Units": "-, -",
    "Default values": "0, 0",
    "Description": "Generic UInt32's for debugging",
    "Senders": "",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1213,
    "Name": "Dbg_Float_1",
    "Field names": "a, b",
    "Data types": "float, float",
    "Units": "-, -",
    "Default values": "0.f, 0.f",
    "Description": "Generic floats for debugging",
    "Senders": "RAUX, FUC, AVC, AVC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1214,
    "Name": "Dbg_Float_2",
    "Field names": "a, b",
    "Data types": "float, float",
    "Units": "-, -",
    "Default values": "0.f, 0.f",
    "Description": "Generic floats for debugging",
    "Senders": "RAUX, FUC, AVC, AVC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1215,
    "Name": "Dbg_Float_3",
    "Field names": "a, b",
    "Data types": "float, float",
    "Units": "-, -",
    "Default values": "0.f, 0.f",
    "Description": "Generic floats for debugging",
    "Senders": "RAUX",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1216,
    "Name": "Dbg_Float_4",
    "Field names": "a, b",
    "Data types": "float, float",
    "Units": "-, -",
    "Default values": "0.f, 0.f",
    "Description": "Generic floats for debugging",
    "Senders": "RAUX",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1218,
    "Name": "Dbg_BMSFanTachNTC1",
    "Field names": "fan_tach_adc, ntc1_adc",
    "Data types": "float, float",
    "Units": "-, -",
    "Default values": "0.f, 0.f",
    "Description": "FAN_TACH and NTC1_ADC raw values",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1219,
    "Name": "Dbg_BMSNTC23",
    "Field names": "ntc2_adc, ntc3_adc",
    "Data types": "float, float",
    "Units": "-, -",
    "Default values": "0.f, 0.f",
    "Description": "NTC2_ADC and NTC3_ADC raw values",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1220,
    "Name": "Dbg_BMSDigitalInputs",
    "Field names": "lvc_wake_bms_int, accelerometer_int, hvil_ok_meas_int, hvil_mid_meas_int, debug_int, imd_data, hv_cont_neg_meas, hv_cont_pos_meas, ivt_ocs_meas_int, lv_uv_int, hv_aux_neg, hv_aux_pos, sat_fault_int, estop_meas_int, imd_ok",
    "Data types": "bool:1,bool:1,bool:1,bool:1, bool:1,bool:1,bool:1,bool:1, bool:1,bool:1,bool:1,bool:1, bool:1,bool:1, bool: 1",
    "Units": "H/L,H/L,H/L,H/L, H/L,H/L,H/L,H/L, H/L,H/L,H/L,H/L, H/L,H/L,H/L",
    "Default values": "0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0",
    "Description": "Raw input values on the BMS",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1221,
    "Name": "Dbg_BMSDigitalOutputs",
    "Field names": "fan_pwm, bms_hv_precharge,bms_hv_prerelay_on,hv_discharge_off,canterm_1,bms_hv_enable_neg,bms_hv_enable_pos,bms_imd_override,bms_hvil_override,bsi_data,bsi_sclk,bsi_xlat,bsi_blank,lvc_hv_ready,sw_bsi_pwr,sat_wakeup,sw_fan_pwr,sw_ivt_pwr,ivt_trigger,bsi_keepalive_led,sw_imd_pwr,bms_ivt_ocs_override,dbg_led_blue,dbg_led_green,dbg_led_red,watchdog_trig,canterm_2,_",
    "Data types": "uint8_t, bool:1,bool:1,bool:1,bool:1,bool:1,bool:1,bool:1,bool:1,bool:1,bool:1,bool:1,bool:1,bool:1,bool:1,bool:1,bool:1,bool:1,bool:1,bool:1,bool:1,bool:1,bool:1,bool:1,bool:1,bool:1,bool:1,uint8_t:6",
    "Units": "% duty cycle, T/F,T/F,T/F,T/F,T/F,T/F,T/F,T/F,T/F,T/F,T/F,T/F,T/F,T/F,T/F,T/F,T/F,T/F,T/F,T/F,T/F,T/F,T/F,T/F,T/F,T/F,-",
    "Default values": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
    "Description": "BMS output values for debugging over CAN",
    "Senders": "",
    "Receivers": "BMS",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1222,
    "Name": "Dbg_BMSIMDMeasurement",
    "Field names": "state,dutyCycle,frequency",
    "Data types": "IMDMeasurement,uint8_t,uint8_t",
    "Units": "state,%,Hz",
    "Default values": "IMDMeasurement::NoData,0,0",
    "Description": "Debug measurement of the IMD",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1231,
    "Name": "Dbg_ACUDigitalOutputs",
    "Field names": "p0_15,p0_17,p2_9",
    "Data types": "uint8_t, uint8_t, uint8_t",
    "Units": "H/L, H/L, H/L",
    "Default values": "0, 0, 0",
    "Description": "Debug digital outputs on the ACU",
    "Senders": "",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1230,
    "Name": "Dbg_ACUDigitalInputs",
    "Field names": "p0_18,p0_19,p0_27,p0_28,p1_19,p2_7,p2_8,p3_26",
    "Data types": "bool:1,bool:1,bool:1,bool:1,bool:1,bool:1,bool:1,bool:1",
    "Units": "H/L,H/L,H/L,H/L,H/L,H/L,H/L,H/L",
    "Default values": "0,0,0,0,0,0,0,0",
    "Description": "Debug measurement of digital inputs on the ACU",
    "Senders": "ACU",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1232,
    "Name": "Dbg_ACUAnalogInputs1",
    "Field names": "p0_2,p0_3,p0_23,p0_24",
    "Data types": "uint16_t, uint16_t, uint16_t, uint16_t",
    "Units": "0-10000,0-10000,0-10000,0-10000",
    "Default values": "0,0,0,0",
    "Description": "Analog inputs on the ACU",
    "Senders": "ACU",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1233,
    "Name": "Dbg_ACUAnalogInputs2",
    "Field names": "p0_25,p0_26,p1_30,p1_31",
    "Data types": "uint16_t, uint16_t, uint16_t, uint16_t",
    "Units": "0-10000,0-10000,0-10000,0-10000",
    "Default values": "0,0,0,0",
    "Description": "Analog inputs on the ACU",
    "Senders": "ACU",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1234,
    "Name": "Dbg_ACUCANInputs",
    "Field names": "can1, can2",
    "Data types": "uint8_t, uint8_t",
    "Units": "-, -",
    "Default values": "0, 0",
    "Description": "Values from both CAN buses",
    "Senders": "ACU",
    "Receivers": "InvL",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1235,
    "Name": "Dbg_ACUCAN1Data",
    "Field names": "value",
    "Data types": "uint8_t",
    "Units": "-",
    "Default values": 0,
    "Description": "Value from CAN1 to write to Dbg_ACUCANInputs",
    "Senders": "",
    "Receivers": "ACU",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1236,
    "Name": "Dbg_ACUCAN2Data",
    "Field names": "value",
    "Data types": "uint8_t",
    "Units": "-",
    "Default values": 0,
    "Description": "Value from CAN2 to write to Dbg_ACUCANInputs",
    "Senders": "",
    "Receivers": "ACU",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1237,
    "Name": "Dbg_ACUTuningParamOut",
    "Field names": "param, value",
    "Data types": "uint8_t, float",
    "Units": "-, -",
    "Default values": "0, 0.f",
    "Description": "Output of a parameter from the ACU to the tuning tool",
    "Senders": "ACU",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1238,
    "Name": "Dbg_ACUTuningParamIn",
    "Field names": "param, value",
    "Data types": "uint8_t, float",
    "Units": "-, -",
    "Default values": "0, 0.f",
    "Description": "Input of a tuning parameter from the tuning tool to the ACU",
    "Senders": "",
    "Receivers": "ACU",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1239,
    "Name": "Dbg_ACUInverterControl",
    "Field names": "current,velocity",
    "Data types": "float,float",
    "Units": "-,-",
    "Default values": "0.f,0.f",
    "Description": "Input for the ACU inverter control debug program",
    "Senders": "",
    "Receivers": "ACU",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1250,
    "Name": "Dbg_BMS_Sat1_Cells1",
    "Field names": "cell1, cell2, cell3, cell4",
    "Data types": "uint16_t, uint16_t, uint16_t, uint16_t",
    "Units": "mV, mV, mV, mV",
    "Default values": "0,0,0,0",
    "Description": "Cells 1-4 of sat board 1",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1251,
    "Name": "Dbg_BMS_Sat1_Cells2",
    "Field names": "cell5, cell6, cell7, cell8",
    "Data types": "uint16_t, uint16_t, uint16_t, uint16_t",
    "Units": "mV, mV, mV, mV",
    "Default values": "0,0,0,0",
    "Description": "Cells 5-8 of sat board 1",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1252,
    "Name": "Dbg_BMS_Sat1_Cells3",
    "Field names": "cell9, cell10, cell11, cell12",
    "Data types": "uint16_t, uint16_t, uint16_t, uint16_t",
    "Units": "mV, mV, mV, mV",
    "Default values": "0,0,0,0",
    "Description": "Cells 9-12 of sat board 1",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1253,
    "Name": "Dbg_BMS_Sat1_Aux1",
    "Field names": "aux1, aux2, aux3, aux4",
    "Data types": "uint16_t, uint16_t, uint16_t, uint16_t",
    "Units": "mV, mV, mV, mV",
    "Default values": "0,0,0,0",
    "Description": "Aux channels 1-4 of sat board 1",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1254,
    "Name": "Dbg_BMS_Sat1_Aux2",
    "Field names": "aux5, aux6, aux7, aux8",
    "Data types": "uint16_t, uint16_t, uint16_t, uint16_t",
    "Units": "mV, mV, mV, mV",
    "Default values": "0,0,0,0",
    "Description": "Aux channels 5-8 of sat board 1",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1255,
    "Name": "Dbg_BMS_Sat2_Cells1",
    "Field names": "cell1, cell2, cell3, cell4",
    "Data types": "uint16_t, uint16_t, uint16_t, uint16_t",
    "Units": "mV, mV, mV, mV",
    "Default values": "0,0,0,0",
    "Description": "Cells 1-4 of sat board 2",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1256,
    "Name": "Dbg_BMS_Sat2_Cells2",
    "Field names": "cell5, cell6, cell7, cell8",
    "Data types": "uint16_t, uint16_t, uint16_t, uint16_t",
    "Units": "mV, mV, mV, mV",
    "Default values": "0,0,0,0",
    "Description": "Cells 5-8 of sat board 2",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1257,
    "Name": "Dbg_BMS_Sat2_Cells3",
    "Field names": "cell9, cell10, cell11, cell12",
    "Data types": "uint16_t, uint16_t, uint16_t, uint16_t",
    "Units": "mV, mV, mV, mV",
    "Default values": "0,0,0,0",
    "Description": "Cells 9-12 of sat board 2",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1258,
    "Name": "Dbg_BMS_Sat2_Aux1",
    "Field names": "aux1, aux2, aux3, aux4",
    "Data types": "uint16_t, uint16_t, uint16_t, uint16_t",
    "Units": "mV, mV, mV, mV",
    "Default values": "0,0,0,0",
    "Description": "Aux channels 1-4 of sat board 2",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1259,
    "Name": "Dbg_BMS_Sat2_Aux2",
    "Field names": "aux5, aux6, aux7, aux8",
    "Data types": "uint16_t, uint16_t, uint16_t, uint16_t",
    "Units": "mV, mV, mV, mV",
    "Default values": "0,0,0,0",
    "Description": "Aux channels 5-8 of sat board 2",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1260,
    "Name": "Dbg_BMS_Sat3_Cells1",
    "Field names": "cell1, cell2, cell3, cell4",
    "Data types": "uint16_t, uint16_t, uint16_t, uint16_t",
    "Units": "mV, mV, mV, mV",
    "Default values": "0,0,0,0",
    "Description": "Cells 1-4 of sat board 3",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1261,
    "Name": "Dbg_BMS_Sat3_Cells2",
    "Field names": "cell5, cell6, cell7, cell8",
    "Data types": "uint16_t, uint16_t, uint16_t, uint16_t",
    "Units": "mV, mV, mV, mV",
    "Default values": "0,0,0,0",
    "Description": "Cells 5-8 of sat board 3",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1262,
    "Name": "Dbg_BMS_Sat3_Cells3",
    "Field names": "cell9, cell10, cell11, cell12",
    "Data types": "uint16_t, uint16_t, uint16_t, uint16_t",
    "Units": "mV, mV, mV, mV",
    "Default values": "0,0,0,0",
    "Description": "Cells 9-12 of sat board 3",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1263,
    "Name": "Dbg_BMS_Sat3_Aux1",
    "Field names": "aux1, aux2, aux3, aux4",
    "Data types": "uint16_t, uint16_t, uint16_t, uint16_t",
    "Units": "mV, mV, mV, mV",
    "Default values": "0,0,0,0",
    "Description": "Aux channels 1-4 of sat board 3",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1264,
    "Name": "Dbg_BMS_Sat3_Aux2",
    "Field names": "aux5, aux6, aux7, aux8",
    "Data types": "uint16_t, uint16_t, uint16_t, uint16_t",
    "Units": "mV, mV, mV, mV",
    "Default values": "0,0,0,0",
    "Description": "Aux channels 5-8 of sat board 3",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1265,
    "Name": "Dbg_BMS_EnableBalancing",
    "Field names": "sat1Chan, sat2Chan, sat3Chan",
    "Data types": "uint8_t, uint8_t, uint8_t",
    "Units": "channel, channel, channel",
    "Default values": "0,0,0",
    "Description": "Enables balancing of certain channels on the BMS sat boards",
    "Senders": "",
    "Receivers": "BMS",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1270,
    "Name": "Dbg_SSB_DigitalInputs",
    "Field names": "switch1, switch2, switch3, switch4, switch5, switch6, switch7, switch8, switch9, switch10, switch11, switch12, switch13",
    "Data types": "bool:1, bool:1, bool: 1, bool: 1, bool:1, bool: 1, bool: 1, bool: 1, bool: 1, bool:1, bool:1, bool:1, bool:1",
    "Units": "T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F",
    "Default values": "0,0,0,0,0, 0,0,0,0,0, 0,0,0",
    "Description": "Digital outputs of the SSB",
    "Senders": "SSB",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1271,
    "Name": "Dbg_SSB_FSRInputs",
    "Field names": "fsr1, fsr2",
    "Data types": "float, float",
    "Units": "-, -",
    "Default values": "0.f, 0.f",
    "Description": "ADC measurements of the FSR's on the SSB",
    "Senders": "SSB",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1272,
    "Name": "Dbg_SSB_RingLEDs",
    "Field names": "led, w, r, g, b",
    "Data types": "uint8_t, uint8_t, uint8_t, uint8_t, uint8_t",
    "Units": "-, -, -, -, -",
    "Default values": "0,0,0,0,0",
    "Description": "Allows for control of the W, R, G and B components of the LEDs on the ring of the SSB",
    "Senders": "",
    "Receivers": "SSB",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1273,
    "Name": "Dbg_SSB_CenterLEDs",
    "Field names": "led, r, g, b",
    "Data types": "uint8_t, uint8_t, uint8_t, uint8_t",
    "Units": "-, -, -, -",
    "Default values": "0,0,0,0",
    "Description": "Allows for control of the R, G and B components of the LEDs on the center of the SSB",
    "Senders": "",
    "Receivers": "SSB",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1280,
    "Name": "Dbg_LVC_DigitalOutputs1",
    "Field names": "p0_8,p0_9,p0_10,p0_11,p0_19,p0_20,p1_9,p1_10",
    "Data types": "uint8_t,uint8_t,uint8_t,uint8_t, uint8_t,uint8_t,uint8_t,uint8_t",
    "Units": "-,-,-,-, -,-,-,-",
    "Default values": "0,0,0,0, 0,0,0,0",
    "Description": "Set 1 of digital outputs for the LVC",
    "Senders": "",
    "Receivers": "LVC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1281,
    "Name": "Dbg_LVC_DigitalOutputs2",
    "Field names": "p1_14,p1_15,p1_16,p1_17,p1_19,p1_20,p1_21,p1_22",
    "Data types": "uint8_t,uint8_t,uint8_t,uint8_t, uint8_t,uint8_t,uint8_t,uint8_t",
    "Units": "-,-,-,-, -,-,-,-",
    "Default values": "0,0,0,0, 0,0,0,0",
    "Description": "Set 2 of digital outputs for the LVC",
    "Senders": "",
    "Receivers": "LVC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1282,
    "Name": "Dbg_LVC_DigitalOutputs3",
    "Field names": "p1_23,p1_24,p1_25,p1_28,p1_29,p2_0,p2_1,p2_11",
    "Data types": "uint8_t,uint8_t,uint8_t,uint8_t, uint8_t,uint8_t,uint8_t,uint8_t",
    "Units": "-,-,-,-, -,-,-,-",
    "Default values": "0,0,0,0, 0,0,0,0",
    "Description": "Set 3 of digital outputs for the LVC",
    "Senders": "",
    "Receivers": "LVC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1283,
    "Name": "Dbg_LVC_DigitalOutputs4",
    "Field names": "p2_12,p2_13,p3_26_pwm,p0_16",
    "Data types": "uint8_t,uint8_t,uint8_t,uint8_t",
    "Units": "-,-,0-100,-",
    "Default values": "0,0,0,0",
    "Description": "Set 4 of digital outputs for the LVC, P3[26] is PWM, duty cycle is based on 0-100 value",
    "Senders": "",
    "Receivers": "LVC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1284,
    "Name": "Dbg_LVC_DigitalInputs",
    "Field names": "p0_15, p0_17, p0_18, P1_27,p2_2,p2_4,p2_5,p2_9",
    "Data types": "bool:1,bool:1, bool:1, bool:1,bool:1, bool:1, bool:1, bool:1",
    "Units": "-,-,-,-,-,-,-,-",
    "Default values": "0,0,0,0,0,0,0,0",
    "Description": "Digital input measurements of the LVC",
    "Senders": "LVC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1285,
    "Name": "Dbg_LVC_NTC12",
    "Field names": "ntc1, ntc2",
    "Data types": "float, float",
    "Units": "-,-",
    "Default values": "0.f,0.f",
    "Description": "NTC 1 and 2 measurements of the LVC",
    "Senders": "LVC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1286,
    "Name": "Dbg_LVC_NTC34",
    "Field names": "ntc3, ntc4",
    "Data types": "float, float",
    "Units": "-,-",
    "Default values": "0.f,0.f",
    "Description": "NTC 3 and 4 measurements of the LVC",
    "Senders": "LVC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1290,
    "Name": "Dbg_ChC_DigitalOutputs",
    "Field names": "p0_25, p1_21, p1_24, p1_26, p1_27, p1_28",
    "Data types": "uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t",
    "Units": "0/1, 0/1, 0/1, 0/1, 0/1, 0/1",
    "Default values": "0,0,0,0,0,0",
    "Description": "Digital output setting over CAN",
    "Senders": "",
    "Receivers": "ChC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1291,
    "Name": "Dbg_ChC_Inputs1",
    "Field names": "p0_23_voltage, p0_24_dc",
    "Data types": "float, float",
    "Units": "V, 0-1",
    "Default values": "0.f, 0.f",
    "Description": "PP and CP measurements on the ChC",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1292,
    "Name": "Dbg_ChC_Inputs2",
    "Field names": "p1_31_voltage",
    "Data types": "float",
    "Units": "V",
    "Default values": "0.f",
    "Description": "Current sense measurement on the ChC",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1293,
    "Name": "Dbg_ChC_CANData",
    "Field names": "can1, can2",
    "Data types": "uint8_t, uint8_t",
    "Units": "-, -",
    "Default values": "0, 0",
    "Description": "Received values on CAN1 and CAN2 for receive test",
    "Senders": "ChC",
    "Receivers": "Ch1",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1294,
    "Name": "Dbg_ChC_CAN1Data",
    "Field names": "value",
    "Data types": "uint8_t",
    "Units": "-",
    "Default values": 0,
    "Description": "Debug data on CAN1",
    "Senders": "",
    "Receivers": "ChC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1295,
    "Name": "Dbg_ChC_CAN2Data",
    "Field names": "value",
    "Data types": "uint8_t",
    "Units": "-",
    "Default values": 0,
    "Description": "Debug data on CAN2",
    "Senders": "",
    "Receivers": "ChC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1296,
    "Name": "Dbg_ChC_ChargerSetpoint",
    "Field names": "voltage, current, enable",
    "Data types": "uint16_t, uint16_t, uint8_t",
    "Units": "0.1V, 0.1A, T/F",
    "Default values": "0, 0, 0",
    "Description": "Debug charging setpoint for charging test software",
    "Senders": "",
    "Receivers": "ChC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1297,
    "Name": "IVT_Msg_Response",
    "Field names": "DB0, DB1, DB2, DB3, DB4, DB5, DB6, DB7",
    "Data types": "int8_t, int8_t, int8_t, int8_t, int8_t, int8_t, int8_t, int8_t",
    "Units": "-, -, -, -, -, -, -, -",
    "Default values": "0, 0, 0, 0, 0, 0, 0, 0",
    "Description": "According to IVT datasheet",
    "Senders": "IVT",
    "Receivers": "BMS",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1297,
    "Name": "IVT_Response",
    "Field names": "data",
    "Data types": "uint64_t",
    "Units": "-",
    "Default values": 0,
    "Description": "IVT data",
    "Senders": "IVT",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1298,
    "Name": "IVT_ResponseEcho",
    "Field names": "data",
    "Data types": "uint64_t",
    "Units": "-",
    "Default values": 0,
    "Description": "IVT data echo dit is papa alfa hotel",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1400,
    "Name": "IVT_Response_Out",
    "Field names": "DB0, DB1, DB2, DB3, DB4, DB5, DB6, DB7",
    "Data types": "uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t",
    "Units": "-, -, -, -, -, -, -, -",
    "Default values": "0, 0, 0, 0, 0, 0, 0, 0",
    "Description": "According to IVT datasheet",
    "Senders": "BMS",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1298,
    "Name": "Dbg_FUC_OtherAUX",
    "Field names": "fucsquirt, wiperFast, wiperSlow, wiperReturn, fan, heater, claxon, odroidShutdown",
    "Data types": "uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t",
    "Units": "-, -, -, -, -, -, -, -",
    "Default values": "0, 0, 0, 0, 0, 0, 0, 0",
    "Description": "Controls for other auxiliaries",
    "Senders": "FUC PCB Test",
    "Receivers": "FUC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1299,
    "Name": "Dbg_FUC_UnauthorizedUseAUX",
    "Field names": "keyLock, handbrakeLock",
    "Data types": "uint8_t, uint8_t",
    "Units": "-, -",
    "Default values": "0,0",
    "Description": "AUX controls for protection against unauthorized use",
    "Senders": "FUC PCB Test",
    "Receivers": "FUC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1300,
    "Name": "Dbg_FUC_LEDStrip",
    "Field names": "power, r, g, b",
    "Data types": "uint8_t, uint8_t, uint8_t, uint8_t",
    "Units": "0/1, 0-255, 0-255, 0-255",
    "Default values": "0, 0, 0, 0",
    "Description": "R, G and B values (0-255) for the LED strip",
    "Senders": "FUC PCB Test",
    "Receivers": "FUC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1301,
    "Name": "Dbg_FUC_ASBLED12",
    "Field names": "r1, g1, b1, r2, g2, b2",
    "Data types": "uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t",
    "Units": "0-255, 0-255, 0-255, 0-255, 0-255, 0-255",
    "Default values": "0, 0, 0, 0, 0, 0",
    "Description": "R, G and B values for LEDs 1 and 2 on the ASB (Value range: 0-255)",
    "Senders": "FUC PCB Test",
    "Receivers": "FUC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1302,
    "Name": "Dbg_FUC_ASBLED34",
    "Field names": "r3, g3, b3, r4, g4, b4",
    "Data types": "uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t",
    "Units": "0-255, 0-255, 0-255, 0-255, 0-255, 0-255",
    "Default values": "0, 0, 0, 0, 0, 0",
    "Description": "R, G and B values for LEDs 3 and 4 on the ASB (Value range: 0-255)",
    "Senders": "FUC PCB Test",
    "Receivers": "FUC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1303,
    "Name": "Dbg_FUC_Telltales",
    "Field names": "leftIndicator, rightIndicator, leftLowBeam, rightLowBeam",
    "Data types": "uint16_t, uint16_t, uint16_t, uint16_t",
    "Units": "0-10000, 0-10000, 0-10000, 0-10000",
    "Default values": "0, 0, 0, 0",
    "Description": "Telltale measurements on the FUC (Value range: 0-10000)",
    "Senders": "FUC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1304,
    "Name": "Dbg_FUC_DigitalInputs",
    "Field names": "auxSwitchboard1, auxSwitchboard2, auxSwitchboard3, leftDoorSensor, rightDoorSensor",
    "Data types": "bool: 1, bool: 1, bool: 1, bool: 1, bool:1",
    "Units": "T/F, T/F, T/F, T/F, T/F",
    "Default values": "0, 0, 0, 0, 0",
    "Description": "Digital inputs on the FUC",
    "Senders": "FUC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1305,
    "Name": "Dbg_FUC_Lights",
    "Field names": "leftIndicator, rightIndicator, daytimeRunningLights, lowBeam, highBeam",
    "Data types": "uint8_t, uint8_t, uint8_t, uint8_t, uint8_t",
    "Units": "-, -, -, -, -",
    "Default values": "0, 0, 0, 0, 0",
    "Description": "Left light control for FUC debug software",
    "Senders": "FUC PCB Test",
    "Receivers": "FUC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1306,
    "Name": "Dbg_PvC_Outputs",
    "Field names": "relay12V, relay5V",
    "Data types": "uint8_t, uint8_t",
    "Units": "0/1, 0/1",
    "Default values": "0, 0",
    "Description": "Controls for outputs on the PvC",
    "Senders": "PvC debug",
    "Receivers": "PvC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1307,
    "Name": "Dbg_PvC_Inputs",
    "Field names": "curSense1, curSense2, curSense3, uv, interlock, estop",
    "Data types": "uint16_t, uint16_t, uint16_t, bool:1, bool:1, bool:1",
    "Units": "0-10000, 0-10000, 0-10000, T/F, T/F, T/F",
    "Default values": "0, 0, 0, 0, 0, 0",
    "Description": "Analog & digital inputs on the PvC",
    "Senders": "PvC",
    "Receivers": "PvC debug",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1308,
    "Name": "Dbg_PvC_CANEcho",
    "Field names": "can1, can2",
    "Data types": "uint8_t, uint8_t",
    "Units": "0-255, 0-255",
    "Default values": "0, 0",
    "Description": "CAN echo for the PvC",
    "Senders": "PvC",
    "Receivers": "MPPT1",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1309,
    "Name": "Dbg_PvC_CANEcho_CAN1Data",
    "Field names": "data",
    "Data types": "uint8_t",
    "Units": "0-255",
    "Default values": 0,
    "Description": "CAN echo data for CAN1",
    "Senders": "PvC debug",
    "Receivers": "PvC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1310,
    "Name": "Dbg_PvC_CANEcho_CAN2Data",
    "Field names": "data",
    "Data types": "uint8_t",
    "Units": "0-255",
    "Default values": 0,
    "Description": "CAN echo data for CAN1",
    "Senders": "PvC debug",
    "Receivers": "PvC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1313,
    "Name": "IVT_Msg_Result_I",
    "Field names": "MuxID, IVT_Result_StateIVT_MsgCount, IVT_Msg_Result_I",
    "Data types": "int8_t, int8_t, int32_t",
    "Units": "-, -, mA",
    "Default values": "0, 0, 0",
    "Description": "Mux: n = channel number, Cyclic counter individually for each channel, IVT__Result_state 0b0000 .. 0b1111,  I Result as signed long",
    "Senders": "IVT",
    "Receivers": "BMS",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1314,
    "Name": "IVT_Msg_Result_U1",
    "Field names": "MuxID, IVT_Result_StateIVT_MsgCount, IVT_Msg_Result_U1",
    "Data types": "int8_t, int8_t, int32_t",
    "Units": "-, -, mV",
    "Default values": "0, 0, 0",
    "Description": "Mux: n = channel number, Cyclic counter individually for each channel, IVT__Result_state 0b0000 .. 0b1111,  U1 Result as signed long",
    "Senders": "IVT",
    "Receivers": "BMS",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1315,
    "Name": "IVT_Msg_Result_U2",
    "Field names": "MuxID, IVT_Result_StateIVT_MsgCount, IVT_Msg_Result_U2",
    "Data types": "int8_t, int8_t, int32_t",
    "Units": "-, -, mV",
    "Default values": "0, 0, 0",
    "Description": "Mux: n = channel number, Cyclic counter individually for each channel, IVT__Result_state 0b0000 .. 0b1111,  U2 Result as signed long",
    "Senders": "IVT",
    "Receivers": "BMS",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1316,
    "Name": "IVT_Msg_Result_U3",
    "Field names": "MuxID, IVT_Result_StateIVT_MsgCount, IVT_Msg_Result_U3",
    "Data types": "int8_t, int8_t, int32_t",
    "Units": "-, -, mV",
    "Default values": "0, 0, 0",
    "Description": "Mux: n = channel number, Cyclic counter individually for each channel, IVT__Result_state 0b0000 .. 0b1111,  U3 Result as signed long",
    "Senders": "IVT",
    "Receivers": "BMS",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1317,
    "Name": "IVT_Msg_Result_T",
    "Field names": "MuxID, IVT_Result_StateIVT_MsgCount, IVT_Msg_Result_T",
    "Data types": "int8_t, int8_t, int32_t",
    "Units": "-, -, 0.1°C",
    "Default values": "0, 0, 0",
    "Description": "Mux: n = channel number, Cyclic counter individually for each channel, IVT__Result_state 0b0000 .. 0b1111,  T Result as signed long",
    "Senders": "IVT",
    "Receivers": "BMS",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1318,
    "Name": "IVT_Msg_Result_W",
    "Field names": "MuxID, IVT_Result_StateIVT_MsgCount, IVT_Msg_Result_W",
    "Data types": "int8_t, int8_t, int32_t",
    "Units": "-, -, W",
    "Default values": "0, 0, 0",
    "Description": "Mux: n = channel number, Cyclic counter individually for each channel, IVT__Result_state 0b0000 .. 0b1111,  P Result as signed long",
    "Senders": "IVT",
    "Receivers": "BMS",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1319,
    "Name": "IVT_Msg_Result_As",
    "Field names": "MuxID, IVT_Result_StateIVT_MsgCount, IVT_Msg_Result_As",
    "Data types": "int8_t, int8_t, int32_t",
    "Units": "-, -, As",
    "Default values": "0, 0, 0",
    "Description": "Mux: n = channel number, Cyclic counter individually for each channel, IVT__Result_state 0b0000 .. 0b1111,  Q Result as signed long",
    "Senders": "IVT",
    "Receivers": "BMS",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "Mirror=true",
    "Send frequency": 0
  },
  {
    "ID": 1320,
    "Name": "IVT_Msg_Result_Wh",
    "Field names": "MuxID, IVT_Result_StateIVT_MsgCount, IVT_Msg_Result_Wh",
    "Data types": "int8_t, int8_t, int32_t",
    "Units": "-, -, Wh",
    "Default values": "0, 0, 0",
    "Description": "Mux: n = channel number, Cyclic counter individually for each channel, IVT__Result_state 0b0000 .. 0b1111,  E Result as signed long",
    "Senders": "IVT",
    "Receivers": "BMS",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "Mirror=true",
    "Send frequency": 0
  },
  {
    "ID": 1321,
    "Name": "Dbg_AVC_Converter_Output",
    "Field names": "converterVoltage, converterCurrent",
    "Data types": "float, float",
    "Units": "V, A",
    "Default values": "0.f, 0.f",
    "Description": "Converter voltage and current for test software of AVC",
    "Senders": "AVC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1322,
    "Name": "Dbg_AVC_NTC_Output",
    "Field names": "ntcTemp1, ntcTemp2",
    "Data types": "float, float",
    "Units": "°C, °C",
    "Default values": "0.f, 0.f",
    "Description": "Output temps of ntcs of AVC",
    "Senders": "AVC",
    "Receivers": "",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1323,
    "Name": "Dbg_AVC_Enable_Converters",
    "Field names": "enableConv1, enableConv2",
    "Data types": "int8_t, int8_t",
    "Units": "0,0",
    "Default values": "0,0",
    "Description": "Whether to enable the converters or not using test software of AVC",
    "Senders": "",
    "Receivers": "AVC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1324,
    "Name": "Dbg_SAC_TxPDO1",
    "Field names": "actualCurrent, actualTorque",
    "Data types": "int32_t, float",
    "Units": "-, Nm",
    "Default values": "0, 0",
    "Description": "Actual torque and current of the Steering Actuator",
    "Senders": "SAC",
    "Receivers": "ACU",
    "Send interval": "",
    "Convert endianness": 0,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1325,
    "Name": "Dbg_BAC_TxPDO1",
    "Field names": "actualCurrent, actualTorque",
    "Data types": "int32_t, float",
    "Units": "-, Nm",
    "Default values": "0, 0",
    "Description": "Actual torque and current of the Braking Actuator",
    "Senders": "BAC",
    "Receivers": "ACU",
    "Send interval": "",
    "Convert endianness": 0,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1326,
    "Name": "Dbg_SAC_SetPoint",
    "Field names": "setpoint, type",
    "Data types": "float, SACSetpointType",
    "Units": "[Nm;deg], type",
    "Default values": "0, SACSetpointType::Torque",
    "Description": "Target torque and mode of operation for the Steering Actuator Controller",
    "Senders": "ACU",
    "Receivers": "SAC",
    "Send interval": "",
    "Convert endianness": 0,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1327,
    "Name": "Dbg_BAC_SetPoint",
    "Field names": "torque",
    "Data types": "float",
    "Units": "Nm",
    "Default values": 0,
    "Description": "Target torque and mode of operation for the Steering Actuator Controller",
    "Senders": "ACU",
    "Receivers": "BAC",
    "Send interval": "",
    "Convert endianness": 0,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1330,
    "Name": "Dbg_ACU_LVCCSetpoint",
    "Field names": "setpoint",
    "Data types": "float",
    "Units": "m/s",
    "Default values": "0.f",
    "Description": "LVCC setpoint for the ACU",
    "Senders": "",
    "Receivers": "ACU",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1331,
    "Name": "Dbg_ACU_LeftCCSetpoint",
    "Field names": "setpoint",
    "Data types": "float",
    "Units": "m/s",
    "Default values": "0.f",
    "Description": "Left blocks CC setpoint for the ACU",
    "Senders": "",
    "Receivers": "ACU",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1332,
    "Name": "Dbg_ACU_RightCCSetpoint",
    "Field names": "setpoint",
    "Data types": "float",
    "Units": "m/s",
    "Default values": "0.f",
    "Description": "Right blocks CC setpoint for the ACU",
    "Senders": "",
    "Receivers": "ACU",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1333,
    "Name": "Dbg_ACU_Mode",
    "Field names": "mode",
    "Data types": "uint8_t",
    "Units": "mode",
    "Default values": 0,
    "Description": "Mode for ACU",
    "Senders": "",
    "Receivers": "ACU",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1409,
    "Name": "SAC_TxSDO",
    "Field names": "command,index,subIndex,data",
    "Data types": "CANOpenSDOCommand, uint16_t, uint8_t, uint32_t",
    "Units": "-, -, -, -",
    "Default values": "CANOpenSDOCommand::Null, 0, 0, 0",
    "Description": "TxSDO for the Braking Actuator",
    "Senders": "BAC",
    "Receivers": "ACU",
    "Send interval": "",
    "Convert endianness": 0,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1410,
    "Name": "BAC_TxSDO",
    "Field names": "command,index,subIndex,data",
    "Data types": "CANOpenSDOCommand, uint16_t, uint8_t, uint32_t",
    "Units": "-, -, -, -",
    "Default values": "CANOpenSDOCommand::Null, 0, 0, 0",
    "Description": "TxSDO for the Steering Actuator",
    "Senders": "SAC",
    "Receivers": "ACU",
    "Send interval": "",
    "Convert endianness": 0,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1537,
    "Name": "SAC_RxSDO",
    "Field names": "command,index,subIndex,data",
    "Data types": "CANOpenSDOCommand, uint16_t, uint8_t, uint32_t",
    "Units": "-, -, -, -",
    "Default values": "CANOpenSDOCommand::Null, 0, 0, 0",
    "Description": "RxSDO for the steering actuator",
    "Senders": "ACU",
    "Receivers": "SAC",
    "Send interval": "",
    "Convert endianness": 0,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1538,
    "Name": "BAC_RxSDO",
    "Field names": "command,index,subIndex,data",
    "Data types": "CANOpenSDOCommand, uint16_t, uint8_t, uint32_t",
    "Units": "-, -, -, -",
    "Default values": "CANOpenSDOCommand::Null, 0, 0, 0",
    "Description": "RxSDO for the braking actuator",
    "Senders": "ACU",
    "Receivers": "SAC",
    "Send interval": "",
    "Convert endianness": 0,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1552,
    "Name": "CMS_Message",
    "Field names": "a, b, c, d, e, f, g, h",
    "Data types": "uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t",
    "Units": "-, -, -, -, -, -, -, -",
    "Default values": "0, 0, 0, 0, 0, 0, 0, 0",
    "Description": "CMS data",
    "Senders": "CMS",
    "Receivers": "FUC",
    "Send interval": "",
    "Convert endianness": 1,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1793,
    "Name": "SAC_Heartbeat",
    "Field names": "data",
    "Data types": "CANOpenHeartbeatData",
    "Units": "heartbeat data",
    "Default values": "CANOpenHeartbeatData::Null",
    "Description": "CANopen heartbeat of the steering actuator",
    "Senders": "SAC",
    "Receivers": "ACU",
    "Send interval": "",
    "Convert endianness": 0,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 1794,
    "Name": "BAC_Heartbeat",
    "Field names": "data",
    "Data types": "CANOpenHeartbeatData",
    "Units": "heartbeat data",
    "Default values": "CANOpenHeartbeatData::Null",
    "Description": "CANopen heartbeat of the braking actuator",
    "Senders": "BAC",
    "Receivers": "ACU",
    "Send interval": "",
    "Convert endianness": 0,
    "Type": "A",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 786438,
    "Name": "Ch1_Response",
    "Field names": "command, value",
    "Data types": "uint16_t, uint16_t",
    "Units": "-, *",
    "Default values": "0, 0",
    "Description": "Charger response",
    "Senders": "Ch1",
    "Receivers": "ChC",
    "Send interval": 1,
    "Convert endianness": 0,
    "Type": "B",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 786437,
    "Name": "Ch2_Response",
    "Field names": "command, value",
    "Data types": "uint16_t, uint16_t",
    "Units": "-, *",
    "Default values": "0, 0",
    "Description": "Charger response",
    "Senders": "Ch2",
    "Receivers": "ChC",
    "Send interval": 1,
    "Convert endianness": 0,
    "Type": "B",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 786435,
    "Name": "Ch3_Response",
    "Field names": "command, value",
    "Data types": "uint16_t, uint16_t",
    "Units": "-, *",
    "Default values": "0, 0",
    "Description": "Charger response",
    "Senders": "Ch3",
    "Receivers": "ChC",
    "Send interval": 1,
    "Convert endianness": 0,
    "Type": "B",
    "Properties": "",
    "Send frequency": 0
  },
  {
    "ID": 700000,
    "Name": "Ch1_CCChargingCurve_Set",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "dA",
    "Default values": 0,
    "Description": "Constant current charging curve",
    "Senders": "",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=176, Write=true",
    "Send frequency": 0
  },
  {
    "ID": 700100,
    "Name": "Ch2_CCChargingCurve_Set",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "dA",
    "Default values": 0,
    "Description": "Constant current charging curve",
    "Senders": "",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=176, Write=true",
    "Send frequency": 0
  },
  {
    "ID": 700200,
    "Name": "Ch3_CCChargingCurve_Set",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "dA",
    "Default values": 0,
    "Description": "Constant current charging curve",
    "Senders": "",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=176, Write=true",
    "Send frequency": 0
  },
  {
    "ID": 700001,
    "Name": "Ch1_CurveConfig_Set",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "-",
    "Default values": 0,
    "Description": "Charger function",
    "Senders": "",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=180, Write=true",
    "Send frequency": 0
  },
  {
    "ID": 700101,
    "Name": "Ch2_CurveConfig_Set",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "-",
    "Default values": 0,
    "Description": "Charger function",
    "Senders": "",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=180, Write=true",
    "Send frequency": 0
  },
  {
    "ID": 700201,
    "Name": "Ch3_CurveConfig_Set",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "-",
    "Default values": 0,
    "Description": "Charger function",
    "Senders": "",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=180, Write=true",
    "Send frequency": 0
  },
  {
    "ID": 700002,
    "Name": "Ch1_CCTimeout_Set",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "min",
    "Default values": 0,
    "Description": "Constant current mode timeout",
    "Senders": "",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=181, Write=true",
    "Send frequency": 0
  },
  {
    "ID": 700102,
    "Name": "Ch2_CCTimeout_Set",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "min",
    "Default values": 0,
    "Description": "Constant current mode timeout",
    "Senders": "",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=181, Write=true",
    "Send frequency": 0
  },
  {
    "ID": 700202,
    "Name": "Ch3_CCTimeout_Set",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "min",
    "Default values": 0,
    "Description": "Constant current mode timeout",
    "Senders": "",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=181, Write=true",
    "Send frequency": 0
  },
  {
    "ID": 700003,
    "Name": "Ch1_TCChargingCurve_Set",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "dA",
    "Default values": 0,
    "Description": "Taper current charging curve",
    "Senders": "",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=179, Write=true",
    "Send frequency": 0
  },
  {
    "ID": 700103,
    "Name": "Ch2_TCChargingCurve_Set",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "dA",
    "Default values": 0,
    "Description": "Taper current charging curve",
    "Senders": "",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=179, Write=true",
    "Send frequency": 0
  },
  {
    "ID": 700203,
    "Name": "Ch3_TCChargingCurve_Set",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "dA",
    "Default values": 0,
    "Description": "Taper current charging curve",
    "Senders": "",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=179, Write=true",
    "Send frequency": 0
  },
  {
    "ID": 700004,
    "Name": "Ch1_VOutMeasurement_Get",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "dV",
    "Default values": 0,
    "Description": "Output voltage",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=96, Write=false",
    "Send frequency": 0
  },
  {
    "ID": 700104,
    "Name": "Ch2_VOutMeasurement_Get",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "dV",
    "Default values": 0,
    "Description": "Output voltage",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=96, Write=false",
    "Send frequency": 0
  },
  {
    "ID": 700204,
    "Name": "Ch3_VOutMeasurement_Get",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "dV",
    "Default values": 0,
    "Description": "Output voltage",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=96, Write=false",
    "Send frequency": 0
  },
  {
    "ID": 700005,
    "Name": "Ch1_VInMeasurement_Get",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "dV",
    "Default values": 0,
    "Description": "Input voltage",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=80, Write=false",
    "Send frequency": 0
  },
  {
    "ID": 700105,
    "Name": "Ch2_VInMeasurement_Get",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "dV",
    "Default values": 0,
    "Description": "Input voltage",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=80, Write=false",
    "Send frequency": 0
  },
  {
    "ID": 700205,
    "Name": "Ch3_VInMeasurement_Get",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "dV",
    "Default values": 0,
    "Description": "Input voltage",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=80, Write=false",
    "Send frequency": 0
  },
  {
    "ID": 700006,
    "Name": "Ch1_CVTimeout_Set",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "min",
    "Default values": 0,
    "Description": "Constant voltage mode timeout",
    "Senders": "",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=182, Write=true",
    "Send frequency": 0
  },
  {
    "ID": 700106,
    "Name": "Ch2_CVTimeout_Set",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "min",
    "Default values": 0,
    "Description": "Constant voltage mode timeout",
    "Senders": "",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=182, Write=true",
    "Send frequency": 0
  },
  {
    "ID": 700206,
    "Name": "Ch3_CVTimeout_Set",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "min",
    "Default values": 0,
    "Description": "Constant voltage mode timeout",
    "Senders": "",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=182, Write=true",
    "Send frequency": 0
  },
  {
    "ID": 700007,
    "Name": "Ch1_VOutSetpoint_Set",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "dV",
    "Default values": 0,
    "Description": "Vout set",
    "Senders": "",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=32, Write=true",
    "Send frequency": 0
  },
  {
    "ID": 700107,
    "Name": "Ch2_VOutSetpoint_Set",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "dV",
    "Default values": 0,
    "Description": "Vout set",
    "Senders": "",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=32, Write=true",
    "Send frequency": 0
  },
  {
    "ID": 700207,
    "Name": "Ch3_VOutSetpoint_Set",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "dV",
    "Default values": 0,
    "Description": "Vout set",
    "Senders": "",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=32, Write=true",
    "Send frequency": 0
  },
  {
    "ID": 700008,
    "Name": "Ch1_Status_Get",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "bits",
    "Default values": 0,
    "Description": "Charger status",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=184, Write=false",
    "Send frequency": 0
  },
  {
    "ID": 700108,
    "Name": "Ch2_Status_Get",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "bits",
    "Default values": 0,
    "Description": "Charger status",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=184, Write=false",
    "Send frequency": 0
  },
  {
    "ID": 700208,
    "Name": "Ch3_Status_Get",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "bits",
    "Default values": 0,
    "Description": "Charger status",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=184, Write=false",
    "Send frequency": 0
  },
  {
    "ID": 700009,
    "Name": "Ch1_FaultStatus_Get",
    "Field names": "value",
    "Data types": "MW3200FaultFlags",
    "Units": "bits",
    "Default values": "MW3200FaultFlags{}",
    "Description": "Abnormal situation",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=64, Write=false",
    "Send frequency": 0
  },
  {
    "ID": 700109,
    "Name": "Ch2_FaultStatus_Get",
    "Field names": "value",
    "Data types": "MW3200FaultFlags",
    "Units": "bits",
    "Default values": "MW3200FaultFlags{}",
    "Description": "Abnormal situation",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=64, Write=false",
    "Send frequency": 0
  },
  {
    "ID": 700209,
    "Name": "Ch3_FaultStatus_Get",
    "Field names": "value",
    "Data types": "MW3200FaultFlags",
    "Units": "bits",
    "Default values": "MW3200FaultFlags{}",
    "Description": "Abnormal situation",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=64, Write=false",
    "Send frequency": 0
  },
  {
    "ID": 700010,
    "Name": "Ch1_IOutSetpoint_Set",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "dA",
    "Default values": 0,
    "Description": "Iout set",
    "Senders": "",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=48, Write=true",
    "Send frequency": 0
  },
  {
    "ID": 700110,
    "Name": "Ch2_IOutSetpoint_Set",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "dA",
    "Default values": 0,
    "Description": "Iout set",
    "Senders": "",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=48, Write=true",
    "Send frequency": 0
  },
  {
    "ID": 700210,
    "Name": "Ch3_IOutSetpoint_Set",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "dA",
    "Default values": 0,
    "Description": "Iout set",
    "Senders": "",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=48, Write=true",
    "Send frequency": 0
  },
  {
    "ID": 700011,
    "Name": "Ch1_CVChargingCurve_Set",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "dV",
    "Default values": 0,
    "Description": "Constant voltage charging curve",
    "Senders": "",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=177, Write=true",
    "Send frequency": 0
  },
  {
    "ID": 700111,
    "Name": "Ch2_CVChargingCurve_Set",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "dV",
    "Default values": 0,
    "Description": "Constant voltage charging curve",
    "Senders": "",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=177, Write=true",
    "Send frequency": 0
  },
  {
    "ID": 700211,
    "Name": "Ch3_CVChargingCurve_Set",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "dV",
    "Default values": 0,
    "Description": "Constant voltage charging curve",
    "Senders": "",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=177, Write=true",
    "Send frequency": 0
  },
  {
    "ID": 700012,
    "Name": "Ch1_IOutMeasurement_Get",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "dA",
    "Default values": 0,
    "Description": "Input current",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=97, Write=false",
    "Send frequency": 0
  },
  {
    "ID": 700112,
    "Name": "Ch2_IOutMeasurement_Get",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "dA",
    "Default values": 0,
    "Description": "Input current",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=97, Write=false",
    "Send frequency": 0
  },
  {
    "ID": 700212,
    "Name": "Ch3_IOutMeasurement_Get",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "dA",
    "Default values": 0,
    "Description": "Input current",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=97, Write=false",
    "Send frequency": 0
  },
  {
    "ID": 700013,
    "Name": "Ch1_TInternalMeasurement_Get",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "ddegC",
    "Default values": 0,
    "Description": "Internal temperature",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=98, Write=false",
    "Send frequency": 0
  },
  {
    "ID": 700113,
    "Name": "Ch2_TInternalMeasurement_Get",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "ddegC",
    "Default values": 0,
    "Description": "Internal temperature",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=98, Write=false",
    "Send frequency": 0
  },
  {
    "ID": 700213,
    "Name": "Ch3_TInternalMeasurement_Get",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "ddegC",
    "Default values": 0,
    "Description": "Internal temperature",
    "Senders": "ChC",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=98, Write=false",
    "Send frequency": 0
  },
  {
    "ID": 700014,
    "Name": "Ch1_Operation_Set",
    "Field names": "value",
    "Data types": "uint8_t",
    "Units": "T/F",
    "Default values": 0,
    "Description": "Enable/disable control",
    "Senders": "",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=0, Write=true",
    "Send frequency": 0
  },
  {
    "ID": 700114,
    "Name": "Ch2_Operation_Set",
    "Field names": "value",
    "Data types": "uint8_t",
    "Units": "T/F",
    "Default values": 0,
    "Description": "Enable/disable control",
    "Senders": "",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=0, Write=true",
    "Send frequency": 0
  },
  {
    "ID": 700214,
    "Name": "Ch3_Operation_Set",
    "Field names": "value",
    "Data types": "uint8_t",
    "Units": "T/F",
    "Default values": 0,
    "Description": "Enable/disable control",
    "Senders": "",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=0, Write=true",
    "Send frequency": 0
  },
  {
    "ID": 700015,
    "Name": "Ch1_FTimeout_Set",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "min",
    "Default values": 0,
    "Description": "Floating mode timeout",
    "Senders": "",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=183, Write=true",
    "Send frequency": 0
  },
  {
    "ID": 700115,
    "Name": "Ch2_FTimeout_Set",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "min",
    "Default values": 0,
    "Description": "Floating mode timeout",
    "Senders": "",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=183, Write=true",
    "Send frequency": 0
  },
  {
    "ID": 700215,
    "Name": "Ch3_FTimeout_Set",
    "Field names": "value",
    "Data types": "uint16_t",
    "Units": "min",
    "Default values": 0,
    "Description": "Floating mode timeout",
    "Senders": "",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=183, Write=true",
    "Send frequency": 0
  },
  {
    "ID": 700016,
    "Name": "Ch1_Version_Get",
    "Field names": "value",
    "Data types": "uint64_t:48",
    "Units": "min",
    "Default values": 0,
    "Description": "Charger version",
    "Senders": "",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=183, Write=false",
    "Send frequency": 0
  },
  {
    "ID": 700116,
    "Name": "Ch2_Version_Get",
    "Field names": "value",
    "Data types": "uint64_t:48",
    "Units": "min",
    "Default values": 0,
    "Description": "Charger version",
    "Senders": "",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=183, Write=false",
    "Send frequency": 0
  },
  {
    "ID": 700216,
    "Name": "Ch3_Version_Get",
    "Field names": "value",
    "Data types": "uint64_t:48",
    "Units": "min",
    "Default values": 0,
    "Description": "Charger version",
    "Senders": "",
    "Receivers": "",
    "Send interval": 1,
    "Convert endianness": 1,
    "Type": "B",
    "Properties": "Command=183, Write=false",
    "Send frequency": 0
  }
]